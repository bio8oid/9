{"version":3,"sources":["../../src/util.ts","../../src/regexps-uri.ts","../../src/regexps-iri.ts","../../node_modules/punycode/punycode.es6.js","../../src/uri.ts","../../src/schemes/http.ts","../../src/schemes/https.ts","../../src/schemes/mailto.ts","../../src/schemes/urn.ts","../../src/schemes/urn-uuid.ts","../../src/index.ts","node_modules/uri-js/tests/tests.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["merge","sets","length","slice","xl","x","join","subexp","str","typeOf","o","undefined","Object","prototype","toString","call","split","pop","shift","toLowerCase","toUpperCase","toArray","obj","Array","setInterval","assign","target","source","key","buildExps","isIRI","ALPHA$$","CR$","DIGIT$$","DQUOTE$$","HEXDIG$$","SP$$","PCT_ENCODED$","SUB_DELIMS$$","RESERVED$$","GEN_DELIMS$$","UCSCHAR$$","SCHEME$","USERINFO$","UNRESERVED$$","DEC_OCTET$","DEC_OCTET_RELAXED$","H16$","LS32$","IPV4ADDRESS$","IPV6ADDRESS1$","IPV6ADDRESS2$","IPV6ADDRESS3$","IPV6ADDRESS4$","IPV6ADDRESS5$","IPV6ADDRESS6$","IPV6ADDRESS7$","IPV6ADDRESS8$","IPV6ADDRESS9$","ZONEID$","IPV6ADDRESS$","IP_LITERAL$","IPV6ADDRZ_RELAXED$","IPVFUTURE$","HOST$","REG_NAME$","PORT$","AUTHORITY$","PCHAR$","SEGMENT$","SEGMENT_NZ$","SEGMENT_NZ_NC$","PATH_ABEMPTY$","PATH_ABSOLUTE$","PATH$","PATH_NOSCHEME$","PATH_ROOTLESS$","PATH_EMPTY$","QUERY$","IPRIVATE$$","FRAGMENT$","HIER_PART$","URI$","RELATIVE_PART$","RELATIVE$","URI_REFERENCE$","ABSOLUTE_URI$","GENERIC_REF$","RELATIVE_REF$","ABSOLUTE_REF$","SAMEDOC_REF$","AUTHORITY_REF$","RegExp","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","Math","stringFromCharCode","String","fromCharCode","error","type","RangeError","map","array","fn","result","mapDomain","string","parts","replace","labels","encoded","ucs2decode","output","counter","value","charCodeAt","extra","push","ucs2encode","fromCodePoint","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","decode","input","inputLength","i","n","bias","basic","lastIndexOf","j","index","oldi","w","t","baseMinusT","out","splice","encode","currentValue","basicLength","handledCPCount","m","handledCPCountPlusOne","q","qMinusT","toUnicode","test","toASCII","punycode","SCHEMES","pctEncChar","chr","c","e","pctDecChars","newStr","il","parseInt","substr","c2","c3","_normalizeComponentEncoding","components","protocol","decodeUnreserved","decStr","match","UNRESERVED","scheme","PCT_ENCODED","NOT_SCHEME","userinfo","NOT_USERINFO","host","NOT_HOST","path","NOT_PATH","NOT_PATH_NOSCHEME","query","NOT_QUERY","fragment","NOT_FRAGMENT","_stripLeadingZeros","_normalizeIPv4","matches","IPV4ADDRESS","address","_normalizeIPv6","IPV6ADDRESS","zone","reverse","last","first","firstFields","lastFields","isLastFieldIPv4Address","fieldCount","lastFieldsStart","fields","allZeroFields","reduce","acc","field","lastLongest","longestZeroFields","sort","a","b","newHost","newFirst","newLast","URI_PARSE","NO_MATCH_IS_UNDEFINED","parse","uriString","options","iri","IRI_PROTOCOL","URI_PROTOCOL","reference","port","isNaN","indexOf","schemeHandler","unicodeSupport","domainHost","_recomposeAuthority","uriTokens","_","$1","$2","RDS1","RDS2","RDS3","RDS5","removeDotSegments","im","s","Error","serialize","authority","charAt","absolutePath","resolveComponents","relative","skipNormalization","tolerant","resolve","baseURI","relativeURI","schemelessOptions","normalize","uri","equal","uriA","uriB","escapeComponent","ESCAPE","unescapeComponent","handler","http","O","ATEXT$$","QTEXT$$","VCHAR$$","SOME_DELIMS$$","NOT_LOCAL_PART","NOT_HFNAME","NOT_HFVALUE","mailtoComponents","to","unknownHeaders","headers","hfields","hfield","toAddrs","subject","body","addr","toAddr","atIdx","localPart","domain","name","URN_PARSE","urnComponents","nid","nss","urnScheme","uriComponents","UUID","uuidComponents","uuid","https","mailto","urn","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","ws","onmessage","event","JSON","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","message","stack","overlay","createErrorOverlay","document","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","d","dep","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAAA,KAAA,GAAA;sCAAyBC,IAAzB;YAAA;;;QACKA,KAAKC,MAAL,GAAc,CAAlB,EAAqB;aACf,CAAL,IAAUD,KAAK,CAAL,EAAQE,KAAR,CAAc,CAAd,EAAiB,CAAC,CAAlB,CAAV;YACMC,KAAKH,KAAKC,MAAL,GAAc,CAAzB;aACK,IAAIG,IAAI,CAAb,EAAgBA,IAAID,EAApB,EAAwB,EAAEC,CAA1B,EAA6B;iBACvBA,CAAL,IAAUJ,KAAKI,CAAL,EAAQF,KAAR,CAAc,CAAd,EAAiB,CAAC,CAAlB,CAAV;;aAEIC,EAAL,IAAWH,KAAKG,EAAL,EAASD,KAAT,CAAe,CAAf,CAAX;eACOF,KAAKK,IAAL,CAAU,EAAV,CAAP;KAPD,MAQO;eACCL,KAAK,CAAL,CAAP;;;AAIF,SAAAM,MAAA,CAAuBC,GAAvB,EAAA;WACQ,QAAQA,GAAR,GAAc,GAArB;;AAGD,SAAAC,MAAA,CAAuBC,CAAvB,EAAA;WACQA,MAAMC,SAAN,GAAkB,WAAlB,GAAiCD,MAAM,IAAN,GAAa,MAAb,GAAsBE,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,CAA/B,EAAkCM,KAAlC,CAAwC,GAAxC,EAA6CC,GAA7C,GAAmDD,KAAnD,CAAyD,GAAzD,EAA8DE,KAA9D,GAAsEC,WAAtE,EAA9D;;AAGD,SAAAC,WAAA,CAA4BZ,GAA5B,EAAA;WACQA,IAAIY,WAAJ,EAAP;;AAGD,SAAAC,OAAA,CAAwBC,GAAxB,EAAA;WACQA,QAAQX,SAAR,IAAqBW,QAAQ,IAA7B,GAAqCA,eAAeC,KAAf,GAAuBD,GAAvB,GAA8B,OAAOA,IAAIpB,MAAX,KAAsB,QAAtB,IAAkCoB,IAAIN,KAAtC,IAA+CM,IAAIE,WAAnD,IAAkEF,IAAIP,IAAtE,GAA6E,CAACO,GAAD,CAA7E,GAAqFC,MAAMV,SAAN,CAAgBV,KAAhB,CAAsBY,IAAtB,CAA2BO,GAA3B,CAAxJ,GAA4L,EAAnM;;AAID,SAAAG,MAAA,CAAuBC,MAAvB,EAAuCC,MAAvC,EAAA;QACOL,MAAMI,MAAZ;QACIC,MAAJ,EAAY;aACN,IAAMC,GAAX,IAAkBD,MAAlB,EAA0B;gBACrBC,GAAJ,IAAWD,OAAOC,GAAP,CAAX;;;WAGKN,GAAP;;;ACnCD,SAAAO,SAAA,CAA0BC,KAA1B,EAAA;QAEEC,UAAU,UADX;QAECC,MAAM,SAFP;QAGCC,UAAU,OAHX;QAICC,WAAW,SAJZ;QAKCC,WAAWnC,MAAMiC,OAAN,EAAe,UAAf,CALZ;;WAMQ,SANR;QAOCG,OAAO,SAPR;QAQCC,eAAe9B,OAAOA,OAAO,YAAY4B,QAAZ,GAAuB,GAAvB,GAA6BA,QAA7B,GAAwCA,QAAxC,GAAmD,GAAnD,GAAyDA,QAAzD,GAAoEA,QAA3E,IAAuF,GAAvF,GAA6F5B,OAAO,gBAAgB4B,QAAhB,GAA2B,GAA3B,GAAiCA,QAAjC,GAA4CA,QAAnD,CAA7F,GAA4J,GAA5J,GAAkK5B,OAAO,MAAM4B,QAAN,GAAiBA,QAAxB,CAAzK,CARhB;;mBASgB,yBAThB;QAUCG,eAAe,qCAVhB;QAWCC,aAAavC,MAAMwC,YAAN,EAAoBF,YAApB,CAXd;QAYCG,YAAYX,QAAQ,6EAAR,GAAwF,IAZrG;;iBAacA,QAAQ,mBAAR,GAA8B,IAb5C;;mBAcgB9B,MAAM+B,OAAN,EAAeE,OAAf,EAAwB,gBAAxB,EAA0CQ,SAA1C,CAdhB;QAeCC,UAAUnC,OAAOwB,UAAU/B,MAAM+B,OAAN,EAAeE,OAAf,EAAwB,aAAxB,CAAV,GAAmD,GAA1D,CAfX;QAgBCU,YAAYpC,OAAOA,OAAO8B,eAAe,GAAf,GAAqBrC,MAAM4C,YAAN,EAAoBN,YAApB,EAAkC,OAAlC,CAA5B,IAA0E,GAAjF,CAhBb;QAiBCO,aAAatC,OAAOA,OAAO,SAAP,IAAoB,GAApB,GAA0BA,OAAO,WAAW0B,OAAlB,CAA1B,GAAuD,GAAvD,GAA6D1B,OAAO,MAAM0B,OAAN,GAAgBA,OAAvB,CAA7D,GAA+F,GAA/F,GAAqG1B,OAAO,UAAU0B,OAAjB,CAArG,GAAiI,GAAjI,GAAuIA,OAA9I,CAjBd;QAkBCa,qBAAqBvC,OAAOA,OAAO,SAAP,IAAoB,GAApB,GAA0BA,OAAO,WAAW0B,OAAlB,CAA1B,GAAuD,GAAvD,GAA6D1B,OAAO,MAAM0B,OAAN,GAAgBA,OAAvB,CAA7D,GAA+F,GAA/F,GAAqG1B,OAAO,YAAY0B,OAAnB,CAArG,GAAmI,OAAnI,GAA6IA,OAApJ,CAlBtB;;mBAmBgB1B,OAAOuC,qBAAqB,KAArB,GAA6BA,kBAA7B,GAAkD,KAAlD,GAA0DA,kBAA1D,GAA+E,KAA/E,GAAuFA,kBAA9F,CAnBhB;QAoBCC,OAAOxC,OAAO4B,WAAW,OAAlB,CApBR;QAqBCa,QAAQzC,OAAOA,OAAOwC,OAAO,KAAP,GAAeA,IAAtB,IAA8B,GAA9B,GAAoCE,YAA3C,CArBT;QAsBCC,gBAAgB3C,OAAmEA,OAAOwC,OAAO,KAAd,IAAuB,KAAvB,GAA+BC,KAAlG,CAtBjB;;oBAuBiBzC,OAAwD,WAAWA,OAAOwC,OAAO,KAAd,CAAX,GAAkC,KAAlC,GAA0CC,KAAlG,CAvBjB;;oBAwBiBzC,OAAOA,OAAwCwC,IAAxC,IAAgD,SAAhD,GAA4DxC,OAAOwC,OAAO,KAAd,CAA5D,GAAmF,KAAnF,GAA2FC,KAAlG,CAxBjB;;oBAyBiBzC,OAAOA,OAAOA,OAAOwC,OAAO,KAAd,IAAuB,OAAvB,GAAiCA,IAAxC,IAAgD,SAAhD,GAA4DxC,OAAOwC,OAAO,KAAd,CAA5D,GAAmF,KAAnF,GAA2FC,KAAlG,CAzBjB;;oBA0BiBzC,OAAOA,OAAOA,OAAOwC,OAAO,KAAd,IAAuB,OAAvB,GAAiCA,IAAxC,IAAgD,SAAhD,GAA4DxC,OAAOwC,OAAO,KAAd,CAA5D,GAAmF,KAAnF,GAA2FC,KAAlG,CA1BjB;;oBA2BiBzC,OAAOA,OAAOA,OAAOwC,OAAO,KAAd,IAAuB,OAAvB,GAAiCA,IAAxC,IAAgD,SAAhD,GAAmEA,IAAnE,GAA0E,KAA1E,GAA2FC,KAAlG,CA3BjB;;oBA4BiBzC,OAAOA,OAAOA,OAAOwC,OAAO,KAAd,IAAuB,OAAvB,GAAiCA,IAAxC,IAAgD,SAAhD,GAA2FC,KAAlG,CA5BjB;;oBA6BiBzC,OAAOA,OAAOA,OAAOwC,OAAO,KAAd,IAAuB,OAAvB,GAAiCA,IAAxC,IAAgD,SAAhD,GAA2FA,IAAlG,CA7BjB;;oBA8BiBxC,OAAOA,OAAOA,OAAOwC,OAAO,KAAd,IAAuB,OAAvB,GAAiCA,IAAxC,IAAgD,SAAvD,CA9BjB;;mBA+BgBxC,OAAO,CAAC2C,aAAD,EAAgBC,aAAhB,EAA+BC,aAA/B,EAA8CC,aAA9C,EAA6DC,aAA7D,EAA4EC,aAA5E,EAA2FC,aAA3F,EAA0GC,aAA1G,EAAyHC,aAAzH,EAAwIpD,IAAxI,CAA6I,GAA7I,CAAP,CA/BhB;QAgCCqD,UAAUpD,OAAOA,OAAOqC,eAAe,GAAf,GAAqBP,YAA5B,IAA4C,GAAnD,CAhCX;;iBAiCc9B,OAAOqD,eAAe,OAAf,GAAyBD,OAAhC,CAjCd;;yBAkCsBpD,OAAOqD,eAAerD,OAAO,iBAAiB4B,QAAjB,GAA4B,MAAnC,CAAf,GAA4DwB,OAAnE,CAlCtB;;iBAmCcpD,OAAO,SAAS4B,QAAT,GAAoB,MAApB,GAA6BnC,MAAM4C,YAAN,EAAoBN,YAApB,EAAkC,OAAlC,CAA7B,GAA0E,GAAjF,CAnCd;QAoCCuB,cAActD,OAAO,QAAQA,OAAOuD,qBAAqB,GAArB,GAA2BF,YAA3B,GAA0C,GAA1C,GAAgDG,UAAvD,CAAR,GAA6E,KAApF,CApCf;;gBAqCaxD,OAAOA,OAAO8B,eAAe,GAAf,GAAqBrC,MAAM4C,YAAN,EAAoBN,YAApB,CAA5B,IAAiE,GAAxE,CArCb;QAsCC0B,QAAQzD,OAAOsD,cAAc,GAAd,GAAoBZ,YAApB,GAAmC,KAAnC,GAA2CgB,SAA3C,GAAuD,GAAvD,GAA6D,GAA7D,GAAmEA,SAA1E,CAtCT;QAuCCC,QAAQ3D,OAAO0B,UAAU,GAAjB,CAvCT;QAwCCkC,aAAa5D,OAAOA,OAAOoC,YAAY,GAAnB,IAA0B,GAA1B,GAAgCqB,KAAhC,GAAwCzD,OAAO,QAAQ2D,KAAf,CAAxC,GAAgE,GAAvE,CAxCd;QAyCCE,SAAS7D,OAAO8B,eAAe,GAAf,GAAqBrC,MAAM4C,YAAN,EAAoBN,YAApB,EAAkC,UAAlC,CAA5B,CAzCV;QA0CC+B,WAAW9D,OAAO6D,SAAS,GAAhB,CA1CZ;QA2CCE,cAAc/D,OAAO6D,SAAS,GAAhB,CA3Cf;QA4CCG,iBAAiBhE,OAAOA,OAAO8B,eAAe,GAAf,GAAqBrC,MAAM4C,YAAN,EAAoBN,YAApB,EAAkC,OAAlC,CAA5B,IAA0E,GAAjF,CA5ClB;QA6CCkC,gBAAgBjE,OAAOA,OAAO,QAAQ8D,QAAf,IAA2B,GAAlC,CA7CjB;QA8CCI,iBAAiBlE,OAAO,QAAQA,OAAO+D,cAAcE,aAArB,CAAR,GAA8C,GAArD,CA9ClB;;qBA+CkBjE,OAAOgE,iBAAiBC,aAAxB,CA/ClB;;qBAgDkBjE,OAAO+D,cAAcE,aAArB,CAhDlB;;kBAiDe,QAAQJ,MAAR,GAAiB,GAjDhC;QAkDCM,QAAQnE,OAAOiE,gBAAgB,GAAhB,GAAsBC,cAAtB,GAAuC,GAAvC,GAA6CE,cAA7C,GAA8D,GAA9D,GAAoEC,cAApE,GAAqF,GAArF,GAA2FC,WAAlG,CAlDT;QAmDCC,SAASvE,OAAOA,OAAO6D,SAAS,GAAT,GAAepE,MAAM,UAAN,EAAkB+E,UAAlB,CAAtB,IAAuD,GAA9D,CAnDV;QAoDCC,YAAYzE,OAAOA,OAAO6D,SAAS,WAAhB,IAA+B,GAAtC,CApDb;QAqDCa,aAAa1E,OAAOA,OAAO,WAAW4D,UAAX,GAAwBK,aAA/B,IAAgD,GAAhD,GAAsDC,cAAtD,GAAuE,GAAvE,GAA6EG,cAA7E,GAA8F,GAA9F,GAAoGC,WAA3G,CArDd;QAsDCK,OAAO3E,OAAOmC,UAAU,KAAV,GAAkBuC,UAAlB,GAA+B1E,OAAO,QAAQuE,MAAf,CAA/B,GAAwD,GAAxD,GAA8DvE,OAAO,QAAQyE,SAAf,CAA9D,GAA0F,GAAjG,CAtDR;QAuDCG,iBAAiB5E,OAAOA,OAAO,WAAW4D,UAAX,GAAwBK,aAA/B,IAAgD,GAAhD,GAAsDC,cAAtD,GAAuE,GAAvE,GAA6EE,cAA7E,GAA8F,GAA9F,GAAoGE,WAA3G,CAvDlB;QAwDCO,YAAY7E,OAAO4E,iBAAiB5E,OAAO,QAAQuE,MAAf,CAAjB,GAA0C,GAA1C,GAAgDvE,OAAO,QAAQyE,SAAf,CAAhD,GAA4E,GAAnF,CAxDb;QAyDCK,iBAAiB9E,OAAO2E,OAAO,GAAP,GAAaE,SAApB,CAzDlB;QA0DCE,gBAAgB/E,OAAOmC,UAAU,KAAV,GAAkBuC,UAAlB,GAA+B1E,OAAO,QAAQuE,MAAf,CAA/B,GAAwD,GAA/D,CA1DjB;QA4DCS,eAAe,OAAO7C,OAAP,GAAiB,MAAjB,GAA0BnC,OAAOA,OAAO,YAAYA,OAAO,MAAMoC,SAAN,GAAkB,IAAzB,CAAZ,GAA6C,IAA7C,GAAoDqB,KAApD,GAA4D,GAA5D,GAAkEzD,OAAO,SAAS2D,KAAT,GAAiB,GAAxB,CAAlE,GAAiG,IAAxG,IAAgH,IAAhH,GAAuHM,aAAvH,GAAuI,GAAvI,GAA6IC,cAA7I,GAA8J,GAA9J,GAAoKG,cAApK,GAAqL,GAArL,GAA2LC,WAA3L,GAAyM,GAAhN,CAA1B,GAAiPtE,OAAO,SAASuE,MAAT,GAAkB,GAAzB,CAAjP,GAAiR,GAAjR,GAAuRvE,OAAO,SAASyE,SAAT,GAAqB,GAA5B,CAAvR,GAA0T,IA5D1U;QA6DCQ,gBAAgB,WAAWjF,OAAOA,OAAO,YAAYA,OAAO,MAAMoC,SAAN,GAAkB,IAAzB,CAAZ,GAA6C,IAA7C,GAAoDqB,KAApD,GAA4D,GAA5D,GAAkEzD,OAAO,SAAS2D,KAAT,GAAiB,GAAxB,CAAlE,GAAiG,IAAxG,IAAgH,IAAhH,GAAuHM,aAAvH,GAAuI,GAAvI,GAA6IC,cAA7I,GAA8J,GAA9J,GAAoKE,cAApK,GAAqL,GAArL,GAA2LE,WAA3L,GAAyM,GAAhN,CAAX,GAAkOtE,OAAO,SAASuE,MAAT,GAAkB,GAAzB,CAAlO,GAAkQ,GAAlQ,GAAwQvE,OAAO,SAASyE,SAAT,GAAqB,GAA5B,CAAxQ,GAA2S,IA7D5T;QA8DCS,gBAAgB,OAAO/C,OAAP,GAAiB,MAAjB,GAA0BnC,OAAOA,OAAO,YAAYA,OAAO,MAAMoC,SAAN,GAAkB,IAAzB,CAAZ,GAA6C,IAA7C,GAAoDqB,KAApD,GAA4D,GAA5D,GAAkEzD,OAAO,SAAS2D,KAAT,GAAiB,GAAxB,CAAlE,GAAiG,IAAxG,IAAgH,IAAhH,GAAuHM,aAAvH,GAAuI,GAAvI,GAA6IC,cAA7I,GAA8J,GAA9J,GAAoKG,cAApK,GAAqL,GAArL,GAA2LC,WAA3L,GAAyM,GAAhN,CAA1B,GAAiPtE,OAAO,SAASuE,MAAT,GAAkB,GAAzB,CAAjP,GAAiR,IA9DlS;QA+DCY,eAAe,MAAMnF,OAAO,SAASyE,SAAT,GAAqB,GAA5B,CAAN,GAAyC,IA/DzD;QAgECW,iBAAiB,MAAMpF,OAAO,MAAMoC,SAAN,GAAkB,IAAzB,CAAN,GAAuC,IAAvC,GAA8CqB,KAA9C,GAAsD,GAAtD,GAA4DzD,OAAO,SAAS2D,KAAT,GAAiB,GAAxB,CAA5D,GAA2F,IAhE7G;WAmEO;oBACO,IAAI0B,MAAJ,CAAW5F,MAAM,KAAN,EAAa+B,OAAb,EAAsBE,OAAtB,EAA+B,aAA/B,CAAX,EAA0D,GAA1D,CADP;sBAES,IAAI2D,MAAJ,CAAW5F,MAAM,WAAN,EAAmB4C,YAAnB,EAAiCN,YAAjC,CAAX,EAA2D,GAA3D,CAFT;kBAGK,IAAIsD,MAAJ,CAAW5F,MAAM,iBAAN,EAAyB4C,YAAzB,EAAuCN,YAAvC,CAAX,EAAiE,GAAjE,CAHL;kBAIK,IAAIsD,MAAJ,CAAW5F,MAAM,iBAAN,EAAyB4C,YAAzB,EAAuCN,YAAvC,CAAX,EAAiE,GAAjE,CAJL;2BAKc,IAAIsD,MAAJ,CAAW5F,MAAM,cAAN,EAAsB4C,YAAtB,EAAoCN,YAApC,CAAX,EAA8D,GAA9D,CALd;mBAMM,IAAIsD,MAAJ,CAAW5F,MAAM,QAAN,EAAgB4C,YAAhB,EAA8BN,YAA9B,EAA4C,gBAA5C,EAA8DyC,UAA9D,CAAX,EAAsF,GAAtF,CANN;sBAOS,IAAIa,MAAJ,CAAW5F,MAAM,QAAN,EAAgB4C,YAAhB,EAA8BN,YAA9B,EAA4C,gBAA5C,CAAX,EAA0E,GAA1E,CAPT;gBAQG,IAAIsD,MAAJ,CAAW5F,MAAM,KAAN,EAAa4C,YAAb,EAA2BN,YAA3B,CAAX,EAAqD,GAArD,CARH;oBASO,IAAIsD,MAAJ,CAAWhD,YAAX,EAAyB,GAAzB,CATP;qBAUQ,IAAIgD,MAAJ,CAAW5F,MAAM,QAAN,EAAgB4C,YAAhB,EAA8BL,UAA9B,CAAX,EAAsD,GAAtD,CAVR;qBAWQ,IAAIqD,MAAJ,CAAWvD,YAAX,EAAyB,GAAzB,CAXR;qBAYQ,IAAIuD,MAAJ,CAAW,OAAO3C,YAAP,GAAsB,IAAjC,CAZR;qBAaQ,IAAI2C,MAAJ,CAAW,WAAWhC,YAAX,GAA0B,GAA1B,GAAgCrD,OAAOA,OAAO,iBAAiB4B,QAAjB,GAA4B,MAAnC,IAA6C,GAA7C,GAAmDwB,OAAnD,GAA6D,GAApE,CAAhC,GAA2G,QAAtH,CAbR;KAAP;;AAiBD,mBAAe9B,UAAU,KAAV,CAAf;;ACrFA,mBAAeA,UAAU,IAAV,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;;AACA,IAAMgE,SAAS,UAAf;;;AAGA,IAAMC,OAAO,EAAb;AACA,IAAMC,OAAO,CAAb;AACA,IAAMC,OAAO,EAAb;AACA,IAAMC,OAAO,EAAb;AACA,IAAMC,OAAO,GAAb;AACA,IAAMC,cAAc,EAApB;AACA,IAAMC,WAAW,GAAjB;AACA,IAAMC,YAAY,GAAlB;;;AAGA,IAAMC,gBAAgB,OAAtB;AACA,IAAMC,gBAAgB,YAAtB;AACA,IAAMC,kBAAkB,2BAAxB;;;AAGA,IAAMC,SAAS;aACF,iDADE;cAED,gDAFC;kBAGG;CAHlB;;;AAOA,IAAMC,gBAAgBZ,OAAOC,IAA7B;AACA,IAAMY,QAAQC,KAAKD,KAAnB;AACA,IAAME,qBAAqBC,OAAOC,YAAlC;;;;;;;;;;AAUA,SAASC,OAAT,CAAeC,IAAf,EAAqB;OACd,IAAIC,UAAJ,CAAeT,OAAOQ,IAAP,CAAf,CAAN;;;;;;;;;;;AAWD,SAASE,GAAT,CAAaC,KAAb,EAAoBC,EAApB,EAAwB;KACjBC,SAAS,EAAf;KACIpH,SAASkH,MAAMlH,MAAnB;QACOA,QAAP,EAAiB;SACTA,MAAP,IAAiBmH,GAAGD,MAAMlH,MAAN,CAAH,CAAjB;;QAEMoH,MAAP;;;;;;;;;;;;;AAaD,SAASC,SAAT,CAAmBC,MAAnB,EAA2BH,EAA3B,EAA+B;KACxBI,QAAQD,OAAOxG,KAAP,CAAa,GAAb,CAAd;KACIsG,SAAS,EAAb;KACIG,MAAMvH,MAAN,GAAe,CAAnB,EAAsB;;;WAGZuH,MAAM,CAAN,IAAW,GAApB;WACSA,MAAM,CAAN,CAAT;;;UAGQD,OAAOE,OAAP,CAAelB,eAAf,EAAgC,MAAhC,CAAT;KACMmB,SAASH,OAAOxG,KAAP,CAAa,GAAb,CAAf;KACM4G,UAAUT,IAAIQ,MAAJ,EAAYN,EAAZ,EAAgB/G,IAAhB,CAAqB,GAArB,CAAhB;QACOgH,SAASM,OAAhB;;;;;;;;;;;;;;;;AAgBD,SAASC,UAAT,CAAoBL,MAApB,EAA4B;KACrBM,SAAS,EAAf;KACIC,UAAU,CAAd;KACM7H,SAASsH,OAAOtH,MAAtB;QACO6H,UAAU7H,MAAjB,EAAyB;MAClB8H,QAAQR,OAAOS,UAAP,CAAkBF,SAAlB,CAAd;MACIC,SAAS,MAAT,IAAmBA,SAAS,MAA5B,IAAsCD,UAAU7H,MAApD,EAA4D;;OAErDgI,QAAQV,OAAOS,UAAP,CAAkBF,SAAlB,CAAd;OACI,CAACG,QAAQ,MAAT,KAAoB,MAAxB,EAAgC;;WACxBC,IAAP,CAAY,CAAC,CAACH,QAAQ,KAAT,KAAmB,EAApB,KAA2BE,QAAQ,KAAnC,IAA4C,OAAxD;IADD,MAEO;;;WAGCC,IAAP,CAAYH,KAAZ;;;GARF,MAWO;UACCG,IAAP,CAAYH,KAAZ;;;QAGKF,MAAP;;;;;;;;;;;AAWD,IAAMM,aAAa,SAAbA,UAAa;QAAStB,OAAOuB,aAAP,iCAAwBjB,KAAxB,EAAT;CAAnB;;;;;;;;;;;AAWA,IAAMkB,eAAe,SAAfA,YAAe,CAASC,SAAT,EAAoB;KACpCA,YAAY,IAAZ,GAAmB,IAAvB,EAA6B;SACrBA,YAAY,IAAnB;;KAEGA,YAAY,IAAZ,GAAmB,IAAvB,EAA6B;SACrBA,YAAY,IAAnB;;KAEGA,YAAY,IAAZ,GAAmB,IAAvB,EAA6B;SACrBA,YAAY,IAAnB;;QAEMzC,IAAP;CAVD;;;;;;;;;;;;;AAwBA,IAAM0C,eAAe,SAAfA,YAAe,CAASC,KAAT,EAAgBC,IAAhB,EAAsB;;;QAGnCD,QAAQ,EAAR,GAAa,MAAMA,QAAQ,EAAd,CAAb,IAAkC,CAACC,QAAQ,CAAT,KAAe,CAAjD,CAAP;CAHD;;;;;;;AAWA,IAAMC,QAAQ,SAARA,KAAQ,CAASC,KAAT,EAAgBC,SAAhB,EAA2BC,SAA3B,EAAsC;KAC/CC,IAAI,CAAR;SACQD,YAAYnC,MAAMiC,QAAQ1C,IAAd,CAAZ,GAAkC0C,SAAS,CAAnD;UACSjC,MAAMiC,QAAQC,SAAd,CAAT;+BAC8BD,QAAQlC,gBAAgBV,IAAhB,IAAwB,CAA9D,EAAiE+C,KAAKjD,IAAtE,EAA4E;UACnEa,MAAMiC,QAAQlC,aAAd,CAAR;;QAEMC,MAAMoC,IAAI,CAACrC,gBAAgB,CAAjB,IAAsBkC,KAAtB,IAA+BA,QAAQ3C,IAAvC,CAAV,CAAP;CAPD;;;;;;;;;AAiBA,IAAM+C,SAAS,SAATA,MAAS,CAASC,KAAT,EAAgB;;KAExBnB,SAAS,EAAf;KACMoB,cAAcD,MAAM/I,MAA1B;KACIiJ,IAAI,CAAR;KACIC,IAAIhD,QAAR;KACIiD,OAAOlD,WAAX;;;;;;KAMImD,QAAQL,MAAMM,WAAN,CAAkBlD,SAAlB,CAAZ;KACIiD,QAAQ,CAAZ,EAAe;UACN,CAAR;;;MAGI,IAAIE,IAAI,CAAb,EAAgBA,IAAIF,KAApB,EAA2B,EAAEE,CAA7B,EAAgC;;MAE3BP,MAAMhB,UAAN,CAAiBuB,CAAjB,KAAuB,IAA3B,EAAiC;WAC1B,WAAN;;SAEMrB,IAAP,CAAYc,MAAMhB,UAAN,CAAiBuB,CAAjB,CAAZ;;;;;;MAMI,IAAIC,QAAQH,QAAQ,CAAR,GAAYA,QAAQ,CAApB,GAAwB,CAAzC,EAA4CG,QAAQP,WAApD,4BAA4F;;;;;;;MAOvFQ,OAAOP,CAAX;OACK,IAAIQ,IAAI,CAAR,EAAWZ,IAAIjD,IAApB,qBAA8CiD,KAAKjD,IAAnD,EAAyD;;OAEpD2D,SAASP,WAAb,EAA0B;YACnB,eAAN;;;OAGKT,QAAQH,aAAaW,MAAMhB,UAAN,CAAiBwB,OAAjB,CAAb,CAAd;;OAEIhB,SAAS3C,IAAT,IAAiB2C,QAAQ9B,MAAM,CAACd,SAASsD,CAAV,IAAeQ,CAArB,CAA7B,EAAsD;YAC/C,UAAN;;;QAGIlB,QAAQkB,CAAb;OACMC,IAAIb,KAAKM,IAAL,GAAYtD,IAAZ,GAAoBgD,KAAKM,OAAOrD,IAAZ,GAAmBA,IAAnB,GAA0B+C,IAAIM,IAA5D;;OAEIZ,QAAQmB,CAAZ,EAAe;;;;OAITC,aAAa/D,OAAO8D,CAA1B;OACID,IAAIhD,MAAMd,SAASgE,UAAf,CAAR,EAAoC;YAC7B,UAAN;;;QAGIA,UAAL;;;MAIKC,MAAMhC,OAAO5H,MAAP,GAAgB,CAA5B;SACOyI,MAAMQ,IAAIO,IAAV,EAAgBI,GAAhB,EAAqBJ,QAAQ,CAA7B,CAAP;;;;MAII/C,MAAMwC,IAAIW,GAAV,IAAiBjE,SAASuD,CAA9B,EAAiC;WAC1B,UAAN;;;OAGIzC,MAAMwC,IAAIW,GAAV,CAAL;OACKA,GAAL;;;SAGOC,MAAP,CAAcZ,GAAd,EAAmB,CAAnB,EAAsBC,CAAtB;;;QAIMtC,OAAOuB,aAAP,eAAwBP,MAAxB,CAAP;CAjFD;;;;;;;;;AA2FA,IAAMkC,SAAS,SAATA,MAAS,CAASf,KAAT,EAAgB;KACxBnB,SAAS,EAAf;;;SAGQD,WAAWoB,KAAX,CAAR;;;KAGIC,cAAcD,MAAM/I,MAAxB;;;KAGIkJ,IAAIhD,QAAR;KACIwC,QAAQ,CAAZ;KACIS,OAAOlD,WAAX;;;;;;;;uBAG2B8C,KAA3B,8HAAkC;OAAvBgB,cAAuB;;OAC7BA,iBAAe,IAAnB,EAAyB;WACjB9B,IAAP,CAAYtB,mBAAmBoD,cAAnB,CAAZ;;;;;;;;;;;;;;;;;;KAIEC,cAAcpC,OAAO5H,MAAzB;KACIiK,iBAAiBD,WAArB;;;;;;KAMIA,WAAJ,EAAiB;SACT/B,IAAP,CAAY9B,SAAZ;;;;QAIM8D,iBAAiBjB,WAAxB,EAAqC;;;;MAIhCkB,IAAIvE,MAAR;;;;;;yBAC2BoD,KAA3B,mIAAkC;QAAvBgB,YAAuB;;QAC7BA,gBAAgBb,CAAhB,IAAqBa,eAAeG,CAAxC,EAA2C;SACtCH,YAAJ;;;;;;;;;;;;;;;;;;;;;MAMII,wBAAwBF,iBAAiB,CAA/C;MACIC,IAAIhB,CAAJ,GAAQzC,MAAM,CAACd,SAAS+C,KAAV,IAAmByB,qBAAzB,CAAZ,EAA6D;WACtD,UAAN;;;WAGQ,CAACD,IAAIhB,CAAL,IAAUiB,qBAAnB;MACID,CAAJ;;;;;;;yBAE2BnB,KAA3B,mIAAkC;QAAvBgB,aAAuB;;QAC7BA,gBAAeb,CAAf,IAAoB,EAAER,KAAF,GAAU/C,MAAlC,EAA0C;aACnC,UAAN;;QAEGoE,iBAAgBb,CAApB,EAAuB;;SAElBkB,IAAI1B,KAAR;UACK,IAAIG,IAAIjD,IAAb,qBAAuCiD,KAAKjD,IAA5C,EAAkD;UAC3C8D,IAAIb,KAAKM,IAAL,GAAYtD,IAAZ,GAAoBgD,KAAKM,OAAOrD,IAAZ,GAAmBA,IAAnB,GAA0B+C,IAAIM,IAA5D;UACIiB,IAAIV,CAAR,EAAW;;;UAGLW,UAAUD,IAAIV,CAApB;UACMC,aAAa/D,OAAO8D,CAA1B;aACOzB,IAAP,CACCtB,mBAAmB2B,aAAaoB,IAAIW,UAAUV,UAA3B,EAAuC,CAAvC,CAAnB,CADD;UAGIlD,MAAM4D,UAAUV,UAAhB,CAAJ;;;YAGM1B,IAAP,CAAYtB,mBAAmB2B,aAAa8B,CAAb,EAAgB,CAAhB,CAAnB,CAAZ;YACO3B,MAAMC,KAAN,EAAayB,qBAAb,EAAoCF,kBAAkBD,WAAtD,CAAP;aACQ,CAAR;OACEC,cAAF;;;;;;;;;;;;;;;;;;IAIAvB,KAAF;IACEQ,CAAF;;QAGMtB,OAAOxH,IAAP,CAAY,EAAZ,CAAP;CArFD;;;;;;;;;;;;;AAmGA,IAAMkK,YAAY,SAAZA,SAAY,CAASvB,KAAT,EAAgB;QAC1B1B,UAAU0B,KAAV,EAAiB,UAASzB,MAAT,EAAiB;SACjClB,cAAcmE,IAAd,CAAmBjD,MAAnB,IACJwB,OAAOxB,OAAOrH,KAAP,CAAa,CAAb,EAAgBgB,WAAhB,EAAP,CADI,GAEJqG,MAFH;EADM,CAAP;CADD;;;;;;;;;;;;;AAmBA,IAAMkD,UAAU,SAAVA,OAAU,CAASzB,KAAT,EAAgB;QACxB1B,UAAU0B,KAAV,EAAiB,UAASzB,MAAT,EAAiB;SACjCjB,cAAckE,IAAd,CAAmBjD,MAAnB,IACJ,SAASwC,OAAOxC,MAAP,CADL,GAEJA,MAFH;EADM,CAAP;CADD;;;;;AAWA,IAAMmD,WAAW;;;;;;YAML,OANK;;;;;;;;SAcR;YACG9C,UADH;YAEGO;EAhBK;WAkBNY,MAlBM;WAmBNgB,MAnBM;YAoBLU,OApBK;cAqBHF;CArBd,CAwBA;;ACvbA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,AACA,AACA,AACA,AAiDA,AAAO,IAAMI,UAA6C,EAAnD;AAEP,SAAAC,UAAA,CAA2BC,GAA3B,EAAA;QACOC,IAAID,IAAI7C,UAAJ,CAAe,CAAf,CAAV;QACI+C,UAAJ;QAEID,IAAI,EAAR,EAAYC,IAAI,OAAOD,EAAEjK,QAAF,CAAW,EAAX,EAAeM,WAAf,EAAX,CAAZ,KACK,IAAI2J,IAAI,GAAR,EAAaC,IAAI,MAAMD,EAAEjK,QAAF,CAAW,EAAX,EAAeM,WAAf,EAAV,CAAb,KACA,IAAI2J,IAAI,IAAR,EAAcC,IAAI,MAAM,CAAED,KAAK,CAAN,GAAW,GAAZ,EAAiBjK,QAAjB,CAA0B,EAA1B,EAA8BM,WAA9B,EAAN,GAAoD,GAApD,GAA0D,CAAE2J,IAAI,EAAL,GAAW,GAAZ,EAAiBjK,QAAjB,CAA0B,EAA1B,EAA8BM,WAA9B,EAA9D,CAAd,KACA4J,IAAI,MAAM,CAAED,KAAK,EAAN,GAAY,GAAb,EAAkBjK,QAAlB,CAA2B,EAA3B,EAA+BM,WAA/B,EAAN,GAAqD,GAArD,GAA2D,CAAG2J,KAAK,CAAN,GAAW,EAAZ,GAAkB,GAAnB,EAAwBjK,QAAxB,CAAiC,EAAjC,EAAqCM,WAArC,EAA3D,GAAgH,GAAhH,GAAsH,CAAE2J,IAAI,EAAL,GAAW,GAAZ,EAAiBjK,QAAjB,CAA0B,EAA1B,EAA8BM,WAA9B,EAA1H;WAEE4J,CAAP;;AAGD,SAAAC,WAAA,CAA4BzK,GAA5B,EAAA;QACK0K,SAAS,EAAb;QACI/B,IAAI,CAAR;QACMgC,KAAK3K,IAAIN,MAAf;WAEOiJ,IAAIgC,EAAX,EAAe;YACRJ,IAAIK,SAAS5K,IAAI6K,MAAJ,CAAWlC,IAAI,CAAf,EAAkB,CAAlB,CAAT,EAA+B,EAA/B,CAAV;YAEI4B,IAAI,GAAR,EAAa;sBACFjE,OAAOC,YAAP,CAAoBgE,CAApB,CAAV;iBACK,CAAL;SAFD,MAIK,IAAIA,KAAK,GAAL,IAAYA,IAAI,GAApB,EAAyB;gBACxBI,KAAKhC,CAAN,IAAY,CAAhB,EAAmB;oBACZmC,KAAKF,SAAS5K,IAAI6K,MAAJ,CAAWlC,IAAI,CAAf,EAAkB,CAAlB,CAAT,EAA+B,EAA/B,CAAX;0BACUrC,OAAOC,YAAP,CAAqB,CAACgE,IAAI,EAAL,KAAY,CAAb,GAAmBO,KAAK,EAA5C,CAAV;aAFD,MAGO;0BACI9K,IAAI6K,MAAJ,CAAWlC,CAAX,EAAc,CAAd,CAAV;;iBAEI,CAAL;SAPI,MASA,IAAI4B,KAAK,GAAT,EAAc;gBACbI,KAAKhC,CAAN,IAAY,CAAhB,EAAmB;oBACZmC,KAAKF,SAAS5K,IAAI6K,MAAJ,CAAWlC,IAAI,CAAf,EAAkB,CAAlB,CAAT,EAA+B,EAA/B,CAAX;oBACMoC,KAAKH,SAAS5K,IAAI6K,MAAJ,CAAWlC,IAAI,CAAf,EAAkB,CAAlB,CAAT,EAA+B,EAA/B,CAAX;0BACUrC,OAAOC,YAAP,CAAqB,CAACgE,IAAI,EAAL,KAAY,EAAb,GAAoB,CAACO,KAAK,EAAN,KAAa,CAAjC,GAAuCC,KAAK,EAAhE,CAAV;aAHD,MAIO;0BACI/K,IAAI6K,MAAJ,CAAWlC,CAAX,EAAc,CAAd,CAAV;;iBAEI,CAAL;SARI,MAUA;sBACM3I,IAAI6K,MAAJ,CAAWlC,CAAX,EAAc,CAAd,CAAV;iBACK,CAAL;;;WAIK+B,MAAP;;AAGD,SAAAM,2BAAA,CAAqCC,UAArC,EAA+DC,QAA/D,EAAA;aACAC,gBAAC,CAA0BnL,GAA1B,EAAD;YACQoL,SAASX,YAAYzK,GAAZ,CAAf;eACQ,CAACoL,OAAOC,KAAP,CAAaH,SAASI,UAAtB,CAAD,GAAqCtL,GAArC,GAA2CoL,MAAnD;;QAGGH,WAAWM,MAAf,EAAuBN,WAAWM,MAAX,GAAoBjF,OAAO2E,WAAWM,MAAlB,EAA0BrE,OAA1B,CAAkCgE,SAASM,WAA3C,EAAwDL,gBAAxD,EAA0ExK,WAA1E,GAAwFuG,OAAxF,CAAgGgE,SAASO,UAAzG,EAAqH,EAArH,CAApB;QACnBR,WAAWS,QAAX,KAAwBvL,SAA5B,EAAuC8K,WAAWS,QAAX,GAAsBpF,OAAO2E,WAAWS,QAAlB,EAA4BxE,OAA5B,CAAoCgE,SAASM,WAA7C,EAA0DL,gBAA1D,EAA4EjE,OAA5E,CAAoFgE,SAASS,YAA7F,EAA2GtB,UAA3G,EAAuHnD,OAAvH,CAA+HgE,SAASM,WAAxI,EAAqJ5K,WAArJ,CAAtB;QACnCqK,WAAWW,IAAX,KAAoBzL,SAAxB,EAAmC8K,WAAWW,IAAX,GAAkBtF,OAAO2E,WAAWW,IAAlB,EAAwB1E,OAAxB,CAAgCgE,SAASM,WAAzC,EAAsDL,gBAAtD,EAAwExK,WAAxE,GAAsFuG,OAAtF,CAA8FgE,SAASW,QAAvG,EAAiHxB,UAAjH,EAA6HnD,OAA7H,CAAqIgE,SAASM,WAA9I,EAA2J5K,WAA3J,CAAlB;QAC/BqK,WAAWa,IAAX,KAAoB3L,SAAxB,EAAmC8K,WAAWa,IAAX,GAAkBxF,OAAO2E,WAAWa,IAAlB,EAAwB5E,OAAxB,CAAgCgE,SAASM,WAAzC,EAAsDL,gBAAtD,EAAwEjE,OAAxE,CAAiF+D,WAAWM,MAAX,GAAoBL,SAASa,QAA7B,GAAwCb,SAASc,iBAAlI,EAAsJ3B,UAAtJ,EAAkKnD,OAAlK,CAA0KgE,SAASM,WAAnL,EAAgM5K,WAAhM,CAAlB;QAC/BqK,WAAWgB,KAAX,KAAqB9L,SAAzB,EAAoC8K,WAAWgB,KAAX,GAAmB3F,OAAO2E,WAAWgB,KAAlB,EAAyB/E,OAAzB,CAAiCgE,SAASM,WAA1C,EAAuDL,gBAAvD,EAAyEjE,OAAzE,CAAiFgE,SAASgB,SAA1F,EAAqG7B,UAArG,EAAiHnD,OAAjH,CAAyHgE,SAASM,WAAlI,EAA+I5K,WAA/I,CAAnB;QAChCqK,WAAWkB,QAAX,KAAwBhM,SAA5B,EAAuC8K,WAAWkB,QAAX,GAAsB7F,OAAO2E,WAAWkB,QAAlB,EAA4BjF,OAA5B,CAAoCgE,SAASM,WAA7C,EAA0DL,gBAA1D,EAA4EjE,OAA5E,CAAoFgE,SAASkB,YAA7F,EAA2G/B,UAA3G,EAAuHnD,OAAvH,CAA+HgE,SAASM,WAAxI,EAAqJ5K,WAArJ,CAAtB;WAEhCqK,UAAP;;AACA;AAED,SAAAoB,kBAAA,CAA4BrM,GAA5B,EAAA;WACQA,IAAIkH,OAAJ,CAAY,SAAZ,EAAuB,IAAvB,KAAgC,GAAvC;;AAGD,SAAAoF,cAAA,CAAwBV,IAAxB,EAAqCV,QAArC,EAAA;QACOqB,UAAUX,KAAKP,KAAL,CAAWH,SAASsB,WAApB,KAAoC,EAApD;;iCACoBD,OAFrB;QAEUE,OAFV;;QAIKA,OAAJ,EAAa;eACLA,QAAQjM,KAAR,CAAc,GAAd,EAAmBmG,GAAnB,CAAuB0F,kBAAvB,EAA2CvM,IAA3C,CAAgD,GAAhD,CAAP;KADD,MAEO;eACC8L,IAAP;;;AAIF,SAAAc,cAAA,CAAwBd,IAAxB,EAAqCV,QAArC,EAAA;QACOqB,UAAUX,KAAKP,KAAL,CAAWH,SAASyB,WAApB,KAAoC,EAApD;;kCAC0BJ,OAF3B;QAEUE,OAFV;QAEmBG,IAFnB;;QAIKH,OAAJ,EAAa;oCACUA,QAAQ9L,WAAR,GAAsBH,KAAtB,CAA4B,IAA5B,EAAkCqM,OAAlC,EADV;;YACLC,IADK;YACCC,KADD;;YAENC,cAAcD,QAAQA,MAAMvM,KAAN,CAAY,GAAZ,EAAiBmG,GAAjB,CAAqB0F,kBAArB,CAAR,GAAmD,EAAvE;YACMY,aAAaH,KAAKtM,KAAL,CAAW,GAAX,EAAgBmG,GAAhB,CAAoB0F,kBAApB,CAAnB;YACMa,yBAAyBhC,SAASsB,WAAT,CAAqBvC,IAArB,CAA0BgD,WAAWA,WAAWvN,MAAX,GAAoB,CAA/B,CAA1B,CAA/B;YACMyN,aAAaD,yBAAyB,CAAzB,GAA6B,CAAhD;YACME,kBAAkBH,WAAWvN,MAAX,GAAoByN,UAA5C;YACME,SAAStM,MAAcoM,UAAd,CAAf;aAEK,IAAItN,IAAI,CAAb,EAAgBA,IAAIsN,UAApB,EAAgC,EAAEtN,CAAlC,EAAqC;mBAC7BA,CAAP,IAAYmN,YAAYnN,CAAZ,KAAkBoN,WAAWG,kBAAkBvN,CAA7B,CAAlB,IAAqD,EAAjE;;YAGGqN,sBAAJ,EAA4B;mBACpBC,aAAa,CAApB,IAAyBb,eAAee,OAAOF,aAAa,CAApB,CAAf,EAAuCjC,QAAvC,CAAzB;;YAGKoC,gBAAgBD,OAAOE,MAAP,CAAmD,UAACC,GAAD,EAAMC,KAAN,EAAaxE,KAAb,EAA3E;gBACO,CAACwE,KAAD,IAAUA,UAAU,GAAxB,EAA6B;oBACtBC,cAAcF,IAAIA,IAAI9N,MAAJ,GAAa,CAAjB,CAApB;oBACIgO,eAAeA,YAAYzE,KAAZ,GAAoByE,YAAYhO,MAAhC,KAA2CuJ,KAA9D,EAAqE;gCACxDvJ,MAAZ;iBADD,MAEO;wBACFiI,IAAJ,CAAS,EAAEsB,YAAF,EAASvJ,QAAS,CAAlB,EAAT;;;mBAGK8N,GAAP;SATqB,EAUnB,EAVmB,CAAtB;YAYMG,oBAAoBL,cAAcM,IAAd,CAAmB,UAACC,CAAD,EAAIC,CAAJ;mBAAUA,EAAEpO,MAAF,GAAWmO,EAAEnO,MAAvB;SAAnB,EAAkD,CAAlD,CAA1B;YAEIqO,gBAAJ;YACIJ,qBAAqBA,kBAAkBjO,MAAlB,GAA2B,CAApD,EAAuD;gBAChDsO,WAAWX,OAAO1N,KAAP,CAAa,CAAb,EAAgBgO,kBAAkB1E,KAAlC,CAAjB;gBACMgF,UAAUZ,OAAO1N,KAAP,CAAagO,kBAAkB1E,KAAlB,GAA0B0E,kBAAkBjO,MAAzD,CAAhB;sBACUsO,SAASlO,IAAT,CAAc,GAAd,IAAqB,IAArB,GAA4BmO,QAAQnO,IAAR,CAAa,GAAb,CAAtC;SAHD,MAIO;sBACIuN,OAAOvN,IAAP,CAAY,GAAZ,CAAV;;YAGG8M,IAAJ,EAAU;uBACE,MAAMA,IAAjB;;eAGMmB,OAAP;KA5CD,MA6CO;eACCnC,IAAP;;;AAIF,IAAMsC,YAAY,iIAAlB;AACA,IAAMC,wBAA4C,EAAD,CAAK9C,KAAL,CAAW,OAAX,EAAqB,CAArB,MAA4BlL,SAA7E;AAEA,SAAAiO,KAAA,CAAsBC,SAAtB,EAAA;QAAwCC,OAAxC,uEAA6D,EAA7D;;QACOrD,aAA2B,EAAjC;QACMC,WAAYoD,QAAQC,GAAR,KAAgB,KAAhB,GAAwBC,YAAxB,GAAuCC,YAAzD;QAEIH,QAAQI,SAAR,KAAsB,QAA1B,EAAoCL,YAAY,CAACC,QAAQ/C,MAAR,GAAiB+C,QAAQ/C,MAAR,GAAiB,GAAlC,GAAwC,EAAzC,IAA+C,IAA/C,GAAsD8C,SAAlE;QAE9B9B,UAAU8B,UAAUhD,KAAV,CAAgB6C,SAAhB,CAAhB;QAEI3B,OAAJ,EAAa;YACR4B,qBAAJ,EAA2B;;uBAEf5C,MAAX,GAAoBgB,QAAQ,CAAR,CAApB;uBACWb,QAAX,GAAsBa,QAAQ,CAAR,CAAtB;uBACWX,IAAX,GAAkBW,QAAQ,CAAR,CAAlB;uBACWoC,IAAX,GAAkB/D,SAAS2B,QAAQ,CAAR,CAAT,EAAqB,EAArB,CAAlB;uBACWT,IAAX,GAAkBS,QAAQ,CAAR,KAAc,EAAhC;uBACWN,KAAX,GAAmBM,QAAQ,CAAR,CAAnB;uBACWJ,QAAX,GAAsBI,QAAQ,CAAR,CAAtB;;gBAGIqC,MAAM3D,WAAW0D,IAAjB,CAAJ,EAA4B;2BAChBA,IAAX,GAAkBpC,QAAQ,CAAR,CAAlB;;SAZF,MAcO;;;uBAEKhB,MAAX,GAAoBgB,QAAQ,CAAR,KAAcpM,SAAlC;uBACWuL,QAAX,GAAuB2C,UAAUQ,OAAV,CAAkB,GAAlB,MAA2B,CAAC,CAA5B,GAAgCtC,QAAQ,CAAR,CAAhC,GAA6CpM,SAApE;uBACWyL,IAAX,GAAmByC,UAAUQ,OAAV,CAAkB,IAAlB,MAA4B,CAAC,CAA7B,GAAiCtC,QAAQ,CAAR,CAAjC,GAA8CpM,SAAjE;uBACWwO,IAAX,GAAkB/D,SAAS2B,QAAQ,CAAR,CAAT,EAAqB,EAArB,CAAlB;uBACWT,IAAX,GAAkBS,QAAQ,CAAR,KAAc,EAAhC;uBACWN,KAAX,GAAoBoC,UAAUQ,OAAV,CAAkB,GAAlB,MAA2B,CAAC,CAA5B,GAAgCtC,QAAQ,CAAR,CAAhC,GAA6CpM,SAAjE;uBACWgM,QAAX,GAAuBkC,UAAUQ,OAAV,CAAkB,GAAlB,MAA2B,CAAC,CAA5B,GAAgCtC,QAAQ,CAAR,CAAhC,GAA6CpM,SAApE;;gBAGIyO,MAAM3D,WAAW0D,IAAjB,CAAJ,EAA4B;2BAChBA,IAAX,GAAmBN,UAAUhD,KAAV,CAAgB,+BAAhB,IAAmDkB,QAAQ,CAAR,CAAnD,GAAgEpM,SAAnF;;;YAIE8K,WAAWW,IAAf,EAAqB;;uBAETA,IAAX,GAAkBc,eAAeJ,eAAerB,WAAWW,IAA1B,EAAgCV,QAAhC,CAAf,EAA0DA,QAA1D,CAAlB;;;YAIGD,WAAWM,MAAX,KAAsBpL,SAAtB,IAAmC8K,WAAWS,QAAX,KAAwBvL,SAA3D,IAAwE8K,WAAWW,IAAX,KAAoBzL,SAA5F,IAAyG8K,WAAW0D,IAAX,KAAoBxO,SAA7H,IAA0I,CAAC8K,WAAWa,IAAtJ,IAA8Jb,WAAWgB,KAAX,KAAqB9L,SAAvL,EAAkM;uBACtLuO,SAAX,GAAuB,eAAvB;SADD,MAEO,IAAIzD,WAAWM,MAAX,KAAsBpL,SAA1B,EAAqC;uBAChCuO,SAAX,GAAuB,UAAvB;SADM,MAEA,IAAIzD,WAAWkB,QAAX,KAAwBhM,SAA5B,EAAuC;uBAClCuO,SAAX,GAAuB,UAAvB;SADM,MAEA;uBACKA,SAAX,GAAuB,KAAvB;;;YAIGJ,QAAQI,SAAR,IAAqBJ,QAAQI,SAAR,KAAsB,QAA3C,IAAuDJ,QAAQI,SAAR,KAAsBzD,WAAWyD,SAA5F,EAAuG;uBAC3FlI,KAAX,GAAmByE,WAAWzE,KAAX,IAAoB,kBAAkB8H,QAAQI,SAA1B,GAAsC,aAA7E;;;YAIKI,gBAAgB1E,QAAQ,CAACkE,QAAQ/C,MAAR,IAAkBN,WAAWM,MAA7B,IAAuC,EAAxC,EAA4C5K,WAA5C,EAAR,CAAtB;;YAGI,CAAC2N,QAAQS,cAAT,KAA4B,CAACD,aAAD,IAAkB,CAACA,cAAcC,cAA7D,CAAJ,EAAkF;;gBAE7E9D,WAAWW,IAAX,KAAoB0C,QAAQU,UAAR,IAAuBF,iBAAiBA,cAAcE,UAA1E,CAAJ,EAA4F;;oBAEvF;+BACQpD,IAAX,GAAkBzB,SAASD,OAAT,CAAiBe,WAAWW,IAAX,CAAgB1E,OAAhB,CAAwBgE,SAASM,WAAjC,EAA8Cf,WAA9C,EAA2D9J,WAA3D,EAAjB,CAAlB;iBADD,CAEE,OAAO6J,CAAP,EAAU;+BACAhE,KAAX,GAAmByE,WAAWzE,KAAX,IAAoB,oEAAoEgE,CAA3G;;;;wCAI0BS,UAA5B,EAAwCwD,YAAxC;SAXD,MAYO;;wCAEsBxD,UAA5B,EAAwCC,QAAxC;;;YAIG4D,iBAAiBA,cAAcV,KAAnC,EAA0C;0BAC3BA,KAAd,CAAoBnD,UAApB,EAAgCqD,OAAhC;;KA3EF,MA6EO;mBACK9H,KAAX,GAAmByE,WAAWzE,KAAX,IAAoB,wBAAvC;;WAGMyE,UAAP;;AACA;AAED,SAAAgE,mBAAA,CAA6BhE,UAA7B,EAAuDqD,OAAvD,EAAA;QACOpD,WAAYoD,QAAQC,GAAR,KAAgB,KAAhB,GAAwBC,YAAxB,GAAuCC,YAAzD;QACMS,YAA0B,EAAhC;QAEIjE,WAAWS,QAAX,KAAwBvL,SAA5B,EAAuC;kBAC5BwH,IAAV,CAAesD,WAAWS,QAA1B;kBACU/D,IAAV,CAAe,GAAf;;QAGGsD,WAAWW,IAAX,KAAoBzL,SAAxB,EAAmC;;kBAExBwH,IAAV,CAAe+E,eAAeJ,eAAehG,OAAO2E,WAAWW,IAAlB,CAAf,EAAwCV,QAAxC,CAAf,EAAkEA,QAAlE,EAA4EhE,OAA5E,CAAoFgE,SAASyB,WAA7F,EAA0G,UAACwC,CAAD,EAAIC,EAAJ,EAAQC,EAAR;mBAAe,MAAMD,EAAN,IAAYC,KAAK,QAAQA,EAAb,GAAkB,EAA9B,IAAoC,GAAnD;SAA1G,CAAf;;QAGG,OAAOpE,WAAW0D,IAAlB,KAA2B,QAA/B,EAAyC;kBAC9BhH,IAAV,CAAe,GAAf;kBACUA,IAAV,CAAesD,WAAW0D,IAAX,CAAgBrO,QAAhB,CAAyB,EAAzB,CAAf;;WAGM4O,UAAUxP,MAAV,GAAmBwP,UAAUpP,IAAV,CAAe,EAAf,CAAnB,GAAwCK,SAA/C;;AACA;AAED,IAAMmP,OAAO,UAAb;AACA,IAAMC,OAAO,aAAb;AACA,IAAMC,OAAO,eAAb;AACA,AACA,IAAMC,OAAO,wBAAb;AAEA,SAAAC,iBAAA,CAAkCjH,KAAlC,EAAA;QACOnB,SAAuB,EAA7B;WAEOmB,MAAM/I,MAAb,EAAqB;YAChB+I,MAAM4C,KAAN,CAAYiE,IAAZ,CAAJ,EAAuB;oBACd7G,MAAMvB,OAAN,CAAcoI,IAAd,EAAoB,EAApB,CAAR;SADD,MAEO,IAAI7G,MAAM4C,KAAN,CAAYkE,IAAZ,CAAJ,EAAuB;oBACrB9G,MAAMvB,OAAN,CAAcqI,IAAd,EAAoB,GAApB,CAAR;SADM,MAEA,IAAI9G,MAAM4C,KAAN,CAAYmE,IAAZ,CAAJ,EAAuB;oBACrB/G,MAAMvB,OAAN,CAAcsI,IAAd,EAAoB,GAApB,CAAR;mBACO/O,GAAP;SAFM,MAGA,IAAIgI,UAAU,GAAV,IAAiBA,UAAU,IAA/B,EAAqC;oBACnC,EAAR;SADM,MAEA;gBACAkH,KAAKlH,MAAM4C,KAAN,CAAYoE,IAAZ,CAAX;gBACIE,EAAJ,EAAQ;oBACDC,IAAID,GAAG,CAAH,CAAV;wBACQlH,MAAM9I,KAAN,CAAYiQ,EAAElQ,MAAd,CAAR;uBACOiI,IAAP,CAAYiI,CAAZ;aAHD,MAIO;sBACA,IAAIC,KAAJ,CAAU,kCAAV,CAAN;;;;WAKIvI,OAAOxH,IAAP,CAAY,EAAZ,CAAP;;AACA;AAED,SAAAgQ,SAAA,CAA0B7E,UAA1B,EAAA;QAAoDqD,OAApD,uEAAyE,EAAzE;;QACOpD,WAAYoD,QAAQC,GAAR,GAAcC,YAAd,GAA6BC,YAA/C;QACMS,YAA0B,EAAhC;;QAGMJ,gBAAgB1E,QAAQ,CAACkE,QAAQ/C,MAAR,IAAkBN,WAAWM,MAA7B,IAAuC,EAAxC,EAA4C5K,WAA5C,EAAR,CAAtB;;QAGImO,iBAAiBA,cAAcgB,SAAnC,EAA8ChB,cAAcgB,SAAd,CAAwB7E,UAAxB,EAAoCqD,OAApC;QAE1CrD,WAAWW,IAAf,EAAqB;;YAEhBV,SAASyB,WAAT,CAAqB1C,IAArB,CAA0BgB,WAAWW,IAArC,CAAJ,EAAgD;;;;aAK3C,IAAI0C,QAAQU,UAAR,IAAuBF,iBAAiBA,cAAcE,UAA1D,EAAuE;;oBAEvE;+BACQpD,IAAX,GAAmB,CAAC0C,QAAQC,GAAT,GAAepE,SAASD,OAAT,CAAiBe,WAAWW,IAAX,CAAgB1E,OAAhB,CAAwBgE,SAASM,WAAjC,EAA8Cf,WAA9C,EAA2D9J,WAA3D,EAAjB,CAAf,GAA4GwJ,SAASH,SAAT,CAAmBiB,WAAWW,IAA9B,CAA/H;iBADD,CAEE,OAAOpB,CAAP,EAAU;+BACAhE,KAAX,GAAmByE,WAAWzE,KAAX,IAAoB,iDAAiD,CAAC8H,QAAQC,GAAT,GAAe,OAAf,GAAyB,SAA1E,IAAuF,iBAAvF,GAA2G/D,CAAlJ;;;;;gCAMyBS,UAA5B,EAAwCC,QAAxC;QAEIoD,QAAQI,SAAR,KAAsB,QAAtB,IAAkCzD,WAAWM,MAAjD,EAAyD;kBAC9C5D,IAAV,CAAesD,WAAWM,MAA1B;kBACU5D,IAAV,CAAe,GAAf;;QAGKoI,YAAYd,oBAAoBhE,UAApB,EAAgCqD,OAAhC,CAAlB;QACIyB,cAAc5P,SAAlB,EAA6B;YACxBmO,QAAQI,SAAR,KAAsB,QAA1B,EAAoC;sBACzB/G,IAAV,CAAe,IAAf;;kBAGSA,IAAV,CAAeoI,SAAf;YAEI9E,WAAWa,IAAX,IAAmBb,WAAWa,IAAX,CAAgBkE,MAAhB,CAAuB,CAAvB,MAA8B,GAArD,EAA0D;sBAC/CrI,IAAV,CAAe,GAAf;;;QAIEsD,WAAWa,IAAX,KAAoB3L,SAAxB,EAAmC;YAC9ByP,IAAI3E,WAAWa,IAAnB;YAEI,CAACwC,QAAQ2B,YAAT,KAA0B,CAACnB,aAAD,IAAkB,CAACA,cAAcmB,YAA3D,CAAJ,EAA8E;gBACzEP,kBAAkBE,CAAlB,CAAJ;;YAGGG,cAAc5P,SAAlB,EAA6B;gBACxByP,EAAE1I,OAAF,CAAU,OAAV,EAAmB,MAAnB,CAAJ,CAD4B;;kBAInBS,IAAV,CAAeiI,CAAf;;QAGG3E,WAAWgB,KAAX,KAAqB9L,SAAzB,EAAoC;kBACzBwH,IAAV,CAAe,GAAf;kBACUA,IAAV,CAAesD,WAAWgB,KAA1B;;QAGGhB,WAAWkB,QAAX,KAAwBhM,SAA5B,EAAuC;kBAC5BwH,IAAV,CAAe,GAAf;kBACUA,IAAV,CAAesD,WAAWkB,QAA1B;;WAGM+C,UAAUpP,IAAV,CAAe,EAAf,CAAP,CAxED;;AAyEC;AAED,SAAAoQ,iBAAA,CAAkC5K,IAAlC,EAAsD6K,QAAtD,EAAA;QAA8E7B,OAA9E,uEAAmG,EAAnG;QAAuG8B,iBAAvG;;QACOlP,SAAuB,EAA7B;QAEI,CAACkP,iBAAL,EAAwB;eAChBhC,MAAM0B,UAAUxK,IAAV,EAAgBgJ,OAAhB,CAAN,EAAgCA,OAAhC,CAAP,CADuB;mBAEZF,MAAM0B,UAAUK,QAAV,EAAoB7B,OAApB,CAAN,EAAoCA,OAApC,CAAX,CAFuB;;cAIdA,WAAW,EAArB;QAEI,CAACA,QAAQ+B,QAAT,IAAqBF,SAAS5E,MAAlC,EAA0C;eAClCA,MAAP,GAAgB4E,SAAS5E,MAAzB;;eAEOG,QAAP,GAAkByE,SAASzE,QAA3B;eACOE,IAAP,GAAcuE,SAASvE,IAAvB;eACO+C,IAAP,GAAcwB,SAASxB,IAAvB;eACO7C,IAAP,GAAc4D,kBAAkBS,SAASrE,IAAT,IAAiB,EAAnC,CAAd;eACOG,KAAP,GAAekE,SAASlE,KAAxB;KAPD,MAQO;YACFkE,SAASzE,QAAT,KAAsBvL,SAAtB,IAAmCgQ,SAASvE,IAAT,KAAkBzL,SAArD,IAAkEgQ,SAASxB,IAAT,KAAkBxO,SAAxF,EAAmG;;mBAE3FuL,QAAP,GAAkByE,SAASzE,QAA3B;mBACOE,IAAP,GAAcuE,SAASvE,IAAvB;mBACO+C,IAAP,GAAcwB,SAASxB,IAAvB;mBACO7C,IAAP,GAAc4D,kBAAkBS,SAASrE,IAAT,IAAiB,EAAnC,CAAd;mBACOG,KAAP,GAAekE,SAASlE,KAAxB;SAND,MAOO;gBACF,CAACkE,SAASrE,IAAd,EAAoB;uBACZA,IAAP,GAAcxG,KAAKwG,IAAnB;oBACIqE,SAASlE,KAAT,KAAmB9L,SAAvB,EAAkC;2BAC1B8L,KAAP,GAAekE,SAASlE,KAAxB;iBADD,MAEO;2BACCA,KAAP,GAAe3G,KAAK2G,KAApB;;aALF,MAOO;oBACFkE,SAASrE,IAAT,CAAckE,MAAd,CAAqB,CAArB,MAA4B,GAAhC,EAAqC;2BAC7BlE,IAAP,GAAc4D,kBAAkBS,SAASrE,IAA3B,CAAd;iBADD,MAEO;wBACF,CAACxG,KAAKoG,QAAL,KAAkBvL,SAAlB,IAA+BmF,KAAKsG,IAAL,KAAczL,SAA7C,IAA0DmF,KAAKqJ,IAAL,KAAcxO,SAAzE,KAAuF,CAACmF,KAAKwG,IAAjG,EAAuG;+BAC/FA,IAAP,GAAc,MAAMqE,SAASrE,IAA7B;qBADD,MAEO,IAAI,CAACxG,KAAKwG,IAAV,EAAgB;+BACfA,IAAP,GAAcqE,SAASrE,IAAvB;qBADM,MAEA;+BACCA,IAAP,GAAcxG,KAAKwG,IAAL,CAAUnM,KAAV,CAAgB,CAAhB,EAAmB2F,KAAKwG,IAAL,CAAU/C,WAAV,CAAsB,GAAtB,IAA6B,CAAhD,IAAqDoH,SAASrE,IAA5E;;2BAEMA,IAAP,GAAc4D,kBAAkBxO,OAAO4K,IAAzB,CAAd;;uBAEMG,KAAP,GAAekE,SAASlE,KAAxB;;;mBAGMP,QAAP,GAAkBpG,KAAKoG,QAAvB;mBACOE,IAAP,GAActG,KAAKsG,IAAnB;mBACO+C,IAAP,GAAcrJ,KAAKqJ,IAAnB;;eAEMpD,MAAP,GAAgBjG,KAAKiG,MAArB;;WAGMY,QAAP,GAAkBgE,SAAShE,QAA3B;WAEOjL,MAAP;;AACA;AAED,SAAAoP,OAAA,CAAwBC,OAAxB,EAAwCC,WAAxC,EAA4DlC,OAA5D,EAAA;QACOmC,oBAAoBxP,OAAO,EAAEsK,QAAS,MAAX,EAAP,EAA4B+C,OAA5B,CAA1B;WACOwB,UAAUI,kBAAkB9B,MAAMmC,OAAN,EAAeE,iBAAf,CAAlB,EAAqDrC,MAAMoC,WAAN,EAAmBC,iBAAnB,CAArD,EAA4FA,iBAA5F,EAA+G,IAA/G,CAAV,EAAgIA,iBAAhI,CAAP;;AACA;AAID,SAAAC,SAAA,CAA0BC,GAA1B,EAAmCrC,OAAnC,EAAA;QACK,OAAOqC,GAAP,KAAe,QAAnB,EAA6B;cACtBb,UAAU1B,MAAMuC,GAAN,EAAWrC,OAAX,CAAV,EAA+BA,OAA/B,CAAN;KADD,MAEO,IAAIrO,OAAO0Q,GAAP,MAAgB,QAApB,EAA8B;cAC9BvC,MAAM0B,UAAyBa,GAAzB,EAA8BrC,OAA9B,CAAN,EAA8CA,OAA9C,CAAN;;WAGMqC,GAAP;;AACA;AAID,SAAAC,KAAA,CAAsBC,IAAtB,EAAgCC,IAAhC,EAA0CxC,OAA1C,EAAA;QACK,OAAOuC,IAAP,KAAgB,QAApB,EAA8B;eACtBf,UAAU1B,MAAMyC,IAAN,EAAYvC,OAAZ,CAAV,EAAgCA,OAAhC,CAAP;KADD,MAEO,IAAIrO,OAAO4Q,IAAP,MAAiB,QAArB,EAA+B;eAC9Bf,UAAyBe,IAAzB,EAA+BvC,OAA/B,CAAP;;QAGG,OAAOwC,IAAP,KAAgB,QAApB,EAA8B;eACtBhB,UAAU1B,MAAM0C,IAAN,EAAYxC,OAAZ,CAAV,EAAgCA,OAAhC,CAAP;KADD,MAEO,IAAIrO,OAAO6Q,IAAP,MAAiB,QAArB,EAA+B;eAC9BhB,UAAyBgB,IAAzB,EAA+BxC,OAA/B,CAAP;;WAGMuC,SAASC,IAAhB;;AACA;AAED,SAAAC,eAAA,CAAgC/Q,GAAhC,EAA4CsO,OAA5C,EAAA;WACQtO,OAAOA,IAAIM,QAAJ,GAAe4G,OAAf,CAAwB,CAACoH,OAAD,IAAY,CAACA,QAAQC,GAArB,GAA2BE,aAAauC,MAAxC,GAAiDxC,aAAawC,MAAtF,EAA+F3G,UAA/F,CAAd;;AACA;AAED,SAAA4G,iBAAA,CAAkCjR,GAAlC,EAA8CsO,OAA9C,EAAA;WACQtO,OAAOA,IAAIM,QAAJ,GAAe4G,OAAf,CAAwB,CAACoH,OAAD,IAAY,CAACA,QAAQC,GAArB,GAA2BE,aAAajD,WAAxC,GAAsDgD,aAAahD,WAA3F,EAAyGf,WAAzG,CAAd;CACA;;ACziBD,IAAMyG,UAA2B;YACvB,MADuB;gBAGnB,IAHmB;WAKxB,eAAUjG,UAAV,EAAoCqD,OAApC,EAAT;;YAEM,CAACrD,WAAWW,IAAhB,EAAsB;uBACVpF,KAAX,GAAmByE,WAAWzE,KAAX,IAAoB,6BAAvC;;eAGMyE,UAAP;KAX+B;eAcpB,mBAAUA,UAAV,EAAoCqD,OAApC,EAAb;;YAEMrD,WAAW0D,IAAX,MAAqBrI,OAAO2E,WAAWM,MAAlB,EAA0B5K,WAA1B,OAA4C,OAA5C,GAAsD,EAAtD,GAA2D,GAAhF,KAAwFsK,WAAW0D,IAAX,KAAoB,EAAhH,EAAoH;uBACxGA,IAAX,GAAkBxO,SAAlB;;;YAIG,CAAC8K,WAAWa,IAAhB,EAAsB;uBACVA,IAAX,GAAkB,GAAlB;;;;;eAOMb,UAAP;;CA7BF,CAiCA;;AChCA,IAAMiG,YAA2B;YACvB,OADuB;gBAEnBC,QAAKnC,UAFc;WAGxBmC,QAAK/C,KAHmB;eAIpB+C,QAAKrB;CAJlB,CAOA;;ACMA,IAAMsB,IAAkB,EAAxB;AACA,IAAM9P,QAAQ,IAAd;;AAGA,IAAMc,eAAe,4BAA4Bd,QAAQ,2EAAR,GAAsF,EAAlH,IAAwH,GAA7I;AACA,IAAMK,WAAW,aAAjB;AACA,IAAME,eAAe9B,OAAOA,OAAO,YAAY4B,QAAZ,GAAuB,GAAvB,GAA6BA,QAA7B,GAAwCA,QAAxC,GAAmD,GAAnD,GAAyDA,QAAzD,GAAoEA,QAA3E,IAAuF,GAAvF,GAA6F5B,OAAO,gBAAgB4B,QAAhB,GAA2B,GAA3B,GAAiCA,QAAjC,GAA4CA,QAAnD,CAA7F,GAA4J,GAA5J,GAAkK5B,OAAO,MAAM4B,QAAN,GAAiBA,QAAxB,CAAzK,CAArB;;;;;;;;;;;;AAaA,IAAM0P,UAAU,uDAAhB;AACA,IAAMC,UAAU,4DAAhB;AACA,IAAMC,UAAU/R,MAAM8R,OAAN,EAAe,YAAf,CAAhB;AACA,AACA,AACA,AACA,AAEA,AAEA,IAAME,gBAAgB,qCAAtB;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAEA,IAAMlG,aAAa,IAAIlG,MAAJ,CAAWhD,YAAX,EAAyB,GAAzB,CAAnB;AACA,IAAMoJ,cAAc,IAAIpG,MAAJ,CAAWvD,YAAX,EAAyB,GAAzB,CAApB;AACA,IAAM4P,iBAAiB,IAAIrM,MAAJ,CAAW5F,MAAM,KAAN,EAAa6R,OAAb,EAAsB,OAAtB,EAA+B,OAA/B,EAAwCE,OAAxC,CAAX,EAA6D,GAA7D,CAAvB;AACA,AACA,IAAMG,aAAa,IAAItM,MAAJ,CAAW5F,MAAM,KAAN,EAAa4C,YAAb,EAA2BoP,aAA3B,CAAX,EAAsD,GAAtD,CAAnB;AACA,IAAMG,cAAcD,UAApB;AACA,AACA,AAEA,SAAAvG,gBAAA,CAA0BnL,GAA1B,EAAA;QACOoL,SAASX,YAAYzK,GAAZ,CAAf;WACQ,CAACoL,OAAOC,KAAP,CAAaC,UAAb,CAAD,GAA4BtL,GAA5B,GAAkCoL,MAA1C;;AAGD,IAAM8F,YAA8C;YAC1C,QAD0C;WAG3C,kBAAUjG,UAAV,EAAoCqD,OAApC,EAAT;YACQsD,mBAAmB3G,UAAzB;YACM4G,KAAKD,iBAAiBC,EAAjB,GAAuBD,iBAAiB9F,IAAjB,GAAwB8F,iBAAiB9F,IAAjB,CAAsBtL,KAAtB,CAA4B,GAA5B,CAAxB,GAA2D,EAA7F;yBACiBsL,IAAjB,GAAwB3L,SAAxB;YAEIyR,iBAAiB3F,KAArB,EAA4B;gBACvB6F,iBAAiB,KAArB;gBACMC,UAAwB,EAA9B;gBACMC,UAAUJ,iBAAiB3F,KAAjB,CAAuBzL,KAAvB,CAA6B,GAA7B,CAAhB;iBAEK,IAAIX,IAAI,CAAR,EAAWD,KAAKoS,QAAQtS,MAA7B,EAAqCG,IAAID,EAAzC,EAA6C,EAAEC,CAA/C,EAAkD;oBAC3CoS,SAASD,QAAQnS,CAAR,EAAWW,KAAX,CAAiB,GAAjB,CAAf;wBAEQyR,OAAO,CAAP,CAAR;yBACM,IAAL;4BACOC,UAAUD,OAAO,CAAP,EAAUzR,KAAV,CAAgB,GAAhB,CAAhB;6BACK,IAAIX,KAAI,CAAR,EAAWD,MAAKsS,QAAQxS,MAA7B,EAAqCG,KAAID,GAAzC,EAA6C,EAAEC,EAA/C,EAAkD;+BAC9C8H,IAAH,CAAQuK,QAAQrS,EAAR,CAAR;;;yBAGG,SAAL;yCACkBsS,OAAjB,GAA2BlB,kBAAkBgB,OAAO,CAAP,CAAlB,EAA6B3D,OAA7B,CAA3B;;yBAEI,MAAL;yCACkB8D,IAAjB,GAAwBnB,kBAAkBgB,OAAO,CAAP,CAAlB,EAA6B3D,OAA7B,CAAxB;;;yCAGiB,IAAjB;gCACQ2C,kBAAkBgB,OAAO,CAAP,CAAlB,EAA6B3D,OAA7B,CAAR,IAAiD2C,kBAAkBgB,OAAO,CAAP,CAAlB,EAA6B3D,OAA7B,CAAjD;;;;gBAKCwD,cAAJ,EAAoBF,iBAAiBG,OAAjB,GAA2BA,OAA3B;;yBAGJ9F,KAAjB,GAAyB9L,SAAzB;aAEK,IAAIN,MAAI,CAAR,EAAWD,OAAKiS,GAAGnS,MAAxB,EAAgCG,MAAID,IAApC,EAAwC,EAAEC,GAA1C,EAA6C;gBACtCwS,OAAOR,GAAGhS,GAAH,EAAMW,KAAN,CAAY,GAAZ,CAAb;iBAEK,CAAL,IAAUyQ,kBAAkBoB,KAAK,CAAL,CAAlB,CAAV;gBAEI,CAAC/D,QAAQS,cAAb,EAA6B;;oBAExB;yBACE,CAAL,IAAU5E,SAASD,OAAT,CAAiB+G,kBAAkBoB,KAAK,CAAL,CAAlB,EAA2B/D,OAA3B,EAAoC3N,WAApC,EAAjB,CAAV;iBADD,CAEE,OAAO6J,CAAP,EAAU;qCACMhE,KAAjB,GAAyBoL,iBAAiBpL,KAAjB,IAA0B,6EAA6EgE,CAAhI;;aALF,MAOO;qBACD,CAAL,IAAUyG,kBAAkBoB,KAAK,CAAL,CAAlB,EAA2B/D,OAA3B,EAAoC3N,WAApC,EAAV;;eAGEd,GAAH,IAAQwS,KAAKvS,IAAL,CAAU,GAAV,CAAR;;eAGM8R,gBAAP;KA5DkD;eA+DvC,sBAAUA,gBAAV,EAA6CtD,OAA7C,EAAb;YACQrD,aAAa2G,gBAAnB;YACMC,KAAKhR,QAAQ+Q,iBAAiBC,EAAzB,CAAX;YACIA,EAAJ,EAAQ;iBACF,IAAIhS,IAAI,CAAR,EAAWD,KAAKiS,GAAGnS,MAAxB,EAAgCG,IAAID,EAApC,EAAwC,EAAEC,CAA1C,EAA6C;oBACtCyS,SAAShM,OAAOuL,GAAGhS,CAAH,CAAP,CAAf;oBACM0S,QAAQD,OAAOvJ,WAAP,CAAmB,GAAnB,CAAd;oBACMyJ,YAAaF,OAAO3S,KAAP,CAAa,CAAb,EAAgB4S,KAAhB,CAAD,CAAyBrL,OAAzB,CAAiCsE,WAAjC,EAA8CL,gBAA9C,EAAgEjE,OAAhE,CAAwEsE,WAAxE,EAAqF5K,WAArF,EAAkGsG,OAAlG,CAA0GuK,cAA1G,EAA0HpH,UAA1H,CAAlB;oBACIoI,SAASH,OAAO3S,KAAP,CAAa4S,QAAQ,CAArB,CAAb;;oBAGI;6BACO,CAACjE,QAAQC,GAAT,GAAepE,SAASD,OAAT,CAAiB+G,kBAAkBwB,MAAlB,EAA0BnE,OAA1B,EAAmC3N,WAAnC,EAAjB,CAAf,GAAoFwJ,SAASH,SAAT,CAAmByI,MAAnB,CAA9F;iBADD,CAEE,OAAOjI,CAAP,EAAU;+BACAhE,KAAX,GAAmByE,WAAWzE,KAAX,IAAoB,0DAA0D,CAAC8H,QAAQC,GAAT,GAAe,OAAf,GAAyB,SAAnF,IAAgG,iBAAhG,GAAoH/D,CAA3J;;mBAGE3K,CAAH,IAAQ2S,YAAY,GAAZ,GAAkBC,MAA1B;;uBAGU3G,IAAX,GAAkB+F,GAAG/R,IAAH,CAAQ,GAAR,CAAlB;;YAGKiS,UAAUH,iBAAiBG,OAAjB,GAA2BH,iBAAiBG,OAAjB,IAA4B,EAAvE;YAEIH,iBAAiBO,OAArB,EAA8BJ,QAAQ,SAAR,IAAqBH,iBAAiBO,OAAtC;YAC1BP,iBAAiBQ,IAArB,EAA2BL,QAAQ,MAAR,IAAkBH,iBAAiBQ,IAAnC;YAErB/E,SAAS,EAAf;aACK,IAAMqF,IAAX,IAAmBX,OAAnB,EAA4B;gBACvBA,QAAQW,IAAR,MAAkBtB,EAAEsB,IAAF,CAAtB,EAA+B;uBACvB/K,IAAP,CACC+K,KAAKxL,OAAL,CAAasE,WAAb,EAA0BL,gBAA1B,EAA4CjE,OAA5C,CAAoDsE,WAApD,EAAiE5K,WAAjE,EAA8EsG,OAA9E,CAAsFwK,UAAtF,EAAkGrH,UAAlG,IACA,GADA,GAEA0H,QAAQW,IAAR,EAAcxL,OAAd,CAAsBsE,WAAtB,EAAmCL,gBAAnC,EAAqDjE,OAArD,CAA6DsE,WAA7D,EAA0E5K,WAA1E,EAAuFsG,OAAvF,CAA+FyK,WAA/F,EAA4GtH,UAA5G,CAHD;;;YAOEgD,OAAO3N,MAAX,EAAmB;uBACPuM,KAAX,GAAmBoB,OAAOvN,IAAP,CAAY,GAAZ,CAAnB;;eAGMmL,UAAP;;CAzGF,CA6GA;;ACnKA,IAAM0H,YAAY,iBAAlB;AACA,AAEA;AACA,IAAMzB,YAAqD;YACjD,KADiD;WAGlD,kBAAUjG,UAAV,EAAoCqD,OAApC,EAAT;YACQ/B,UAAUtB,WAAWa,IAAX,IAAmBb,WAAWa,IAAX,CAAgBT,KAAhB,CAAsBsH,SAAtB,CAAnC;YACIC,gBAAgB3H,UAApB;YAEIsB,OAAJ,EAAa;gBACNhB,SAAS+C,QAAQ/C,MAAR,IAAkBqH,cAAcrH,MAAhC,IAA0C,KAAzD;gBACMsH,MAAMtG,QAAQ,CAAR,EAAW5L,WAAX,EAAZ;gBACMmS,MAAMvG,QAAQ,CAAR,CAAZ;gBACMwG,YAAexH,MAAf,UAAyB+C,QAAQuE,GAAR,IAAeA,GAAxC,CAAN;gBACM/D,gBAAgB1E,QAAQ2I,SAAR,CAAtB;0BAEcF,GAAd,GAAoBA,GAApB;0BACcC,GAAd,GAAoBA,GAApB;0BACchH,IAAd,GAAqB3L,SAArB;gBAEI2O,aAAJ,EAAmB;gCACFA,cAAcV,KAAd,CAAoBwE,aAApB,EAAmCtE,OAAnC,CAAhB;;SAZF,MAcO;0BACQ9H,KAAd,GAAsBoM,cAAcpM,KAAd,IAAuB,wBAA7C;;eAGMoM,aAAP;KAzByD;eA4B9C,sBAAUA,aAAV,EAAuCtE,OAAvC,EAAb;YACQ/C,SAAS+C,QAAQ/C,MAAR,IAAkBqH,cAAcrH,MAAhC,IAA0C,KAAzD;YACMsH,MAAMD,cAAcC,GAA1B;YACME,YAAexH,MAAf,UAAyB+C,QAAQuE,GAAR,IAAeA,GAAxC,CAAN;YACM/D,gBAAgB1E,QAAQ2I,SAAR,CAAtB;YAEIjE,aAAJ,EAAmB;4BACFA,cAAcgB,SAAd,CAAwB8C,aAAxB,EAAuCtE,OAAvC,CAAhB;;YAGK0E,gBAAgBJ,aAAtB;YACME,MAAMF,cAAcE,GAA1B;sBACchH,IAAd,IAAwB+G,OAAOvE,QAAQuE,GAAvC,UAA8CC,GAA9C;eAEOE,aAAP;;CA1CF,CA8CA;;AC5DA,IAAMC,OAAO,0DAAb;AACA,AAEA;AACA,IAAM/B,YAAsE;YAClE,UADkE;WAGnE,eAAU0B,aAAV,EAAuCtE,OAAvC,EAAT;YACQ4E,iBAAiBN,aAAvB;uBACeO,IAAf,GAAsBD,eAAeJ,GAArC;uBACeA,GAAf,GAAqB3S,SAArB;YAEI,CAACmO,QAAQ+B,QAAT,KAAsB,CAAC6C,eAAeC,IAAhB,IAAwB,CAACD,eAAeC,IAAf,CAAoB9H,KAApB,CAA0B4H,IAA1B,CAA/C,CAAJ,EAAqF;2BACrEzM,KAAf,GAAuB0M,eAAe1M,KAAf,IAAwB,oBAA/C;;eAGM0M,cAAP;KAZ0E;eAe/D,mBAAUA,cAAV,EAAyC5E,OAAzC,EAAb;YACQsE,gBAAgBM,cAAtB;;sBAEcJ,GAAd,GAAoB,CAACI,eAAeC,IAAf,IAAuB,EAAxB,EAA4BxS,WAA5B,EAApB;eACOiS,aAAP;;CAnBF,CAuBA;;AChCAxI,QAAQ+G,QAAK5F,MAAb,IAAuB4F,OAAvB;AAEA,AACA/G,QAAQgJ,UAAM7H,MAAd,IAAwB6H,SAAxB;AAEA,AACAhJ,QAAQiJ,UAAO9H,MAAf,IAAyB8H,SAAzB;AAEA,AACAjJ,QAAQkJ,UAAI/H,MAAZ,IAAsB+H,SAAtB;AAEA,AACAlJ,QAAQ+I,UAAK5H,MAAb,IAAuB4H,SAAvB,CAEA;;;;;;;;;;;;;;;;;;;;;ACjtwBA,IAAII,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BJ,EAAAA,SAAS,CAACjT,IAAV,CAAe,IAAf,EAAqBqT,UAArB;AACA,OAAKC,GAAL,GAAW;AACTC,IAAAA,IAAI,EAAEL,MAAM,CAACC,MAAP,CAAcK,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUrN,EAAV,EAAc;AACpB,WAAKmN,gBAAL,CAAsBrM,IAAtB,CAA2Bd,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTsN,IAAAA,OAAO,EAAE,UAAUtN,EAAV,EAAc;AACrB,WAAKoN,iBAAL,CAAuBtM,IAAvB,CAA4Bd,EAA5B;AACD;AATQ,GAAX;AAYA4M,EAAAA,MAAM,CAACC,MAAP,CAAcK,OAAd,GAAwB,IAAxB;AACD;;AAEDN,MAAM,CAACC,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIS,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAGb,MAAM,CAACC,MAAP,CAAcY,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAApD;AACA,MAAIvJ,QAAQ,GAAGwJ,QAAQ,CAACxJ,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIyJ,EAAE,GAAG,IAAIH,SAAJ,CAActJ,QAAQ,GAAG,KAAX,GAAmBuJ,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAE,EAAAA,EAAE,CAACC,SAAH,GAAe,UAASC,KAAT,EAAgB;AAC7BT,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAIP,IAAI,GAAGgB,IAAI,CAAC1G,KAAL,CAAWyG,KAAK,CAACf,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAACrN,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAIsO,OAAO,GAAG,KAAd;AACAjB,MAAAA,IAAI,CAACkB,MAAL,CAAYC,OAAZ,CAAoB,UAASC,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAACM,EAA7B,CAA9B;;AACA,cAAIJ,SAAJ,EAAe;AACbL,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAIjB,IAAI,CAACkB,MAAL,CAAYS,KAAZ,CAAkB,UAASP,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAACzO,IAAN,KAAe,KAAf,IAAwByO,KAAK,CAACQ,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIZ,OAAJ,EAAa;AACXa,QAAAA,OAAO,CAACC,KAAR;AAEA/B,QAAAA,IAAI,CAACkB,MAAL,CAAYC,OAAZ,CAAoB,UAAUC,KAAV,EAAiB;AACnCY,UAAAA,QAAQ,CAACR,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAb,QAAAA,cAAc,CAACY,OAAf,CAAuB,UAAUc,CAAV,EAAa;AAClCC,UAAAA,YAAY,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO,IAAIrB,QAAQ,CAACuB,MAAb,EAAqB;AAAE;AAC5BvB,QAAAA,QAAQ,CAACuB,MAAT;AACD;AACF;;AAED,QAAInC,IAAI,CAACrN,IAAL,KAAc,QAAlB,EAA4B;AAC1BkO,MAAAA,EAAE,CAACuB,KAAH;;AACAvB,MAAAA,EAAE,CAACwB,OAAH,GAAa,YAAY;AACvBzB,QAAAA,QAAQ,CAACuB,MAAT;AACD,OAFD;AAGD;;AAED,QAAInC,IAAI,CAACrN,IAAL,KAAc,gBAAlB,EAAoC;AAClCmP,MAAAA,OAAO,CAACQ,GAAR,CAAY,2BAAZ;AAEAC,MAAAA,kBAAkB;AACnB;;AAED,QAAIvC,IAAI,CAACrN,IAAL,KAAc,OAAlB,EAA2B;AACzBmP,MAAAA,OAAO,CAACpP,KAAR,CAAc,kBAAkBsN,IAAI,CAACtN,KAAL,CAAW8P,OAA7B,GAAuC,IAAvC,GAA8CxC,IAAI,CAACtN,KAAL,CAAW+P,KAAvE;AAEAF,MAAAA,kBAAkB;AAElB,UAAIG,OAAO,GAAGC,kBAAkB,CAAC3C,IAAD,CAAhC;AACA4C,MAAAA,QAAQ,CAACtE,IAAT,CAAcuE,WAAd,CAA0BH,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASH,kBAAT,GAA8B;AAC5B,MAAIG,OAAO,GAAGE,QAAQ,CAACE,cAAT,CAAwBrD,UAAxB,CAAd;;AACA,MAAIiD,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACK,MAAR;AACD;AACF;;AAED,SAASJ,kBAAT,CAA4B3C,IAA5B,EAAkC;AAChC,MAAI0C,OAAO,GAAGE,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAd;AACAN,EAAAA,OAAO,CAAChB,EAAR,GAAajC,UAAb,CAFgC,CAIhC;;AACA,MAAI+C,OAAO,GAAGI,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAIC,UAAU,GAAGL,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAjB;AACAR,EAAAA,OAAO,CAACU,SAAR,GAAoBlD,IAAI,CAACtN,KAAL,CAAW8P,OAA/B;AACAS,EAAAA,UAAU,CAACC,SAAX,GAAuBlD,IAAI,CAACtN,KAAL,CAAW+P,KAAlC;AAEAC,EAAAA,OAAO,CAACS,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0EX,OAAO,CAACW,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIYF,UAAU,CAACE,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAOT,OAAP;AAED;;AAED,SAASU,UAAT,CAAoBxD,MAApB,EAA4B8B,EAA5B,EAAgC;AAC9B,MAAI2B,OAAO,GAAGzD,MAAM,CAACyD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAI7O,CAAJ,EAAO8O,CAAP,EAAUC,GAAV;;AAEA,OAAK/O,CAAL,IAAU4O,OAAV,EAAmB;AACjB,SAAKE,CAAL,IAAUF,OAAO,CAAC5O,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvB+O,MAAAA,GAAG,GAAGH,OAAO,CAAC5O,CAAD,CAAP,CAAW,CAAX,EAAc8O,CAAd,CAAN;;AACA,UAAIC,GAAG,KAAK9B,EAAR,IAAezU,KAAK,CAACwW,OAAN,CAAcD,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAAC5X,MAAJ,GAAa,CAAd,CAAH,KAAwB8V,EAAjE,EAAsE;AACpE4B,QAAAA,OAAO,CAACzP,IAAR,CAAaY,CAAb;AACD;AACF;AACF;;AAED,MAAImL,MAAM,CAACY,MAAX,EAAmB;AACjB8C,IAAAA,OAAO,GAAGA,OAAO,CAACI,MAAR,CAAeN,UAAU,CAACxD,MAAM,CAACY,MAAR,EAAgBkB,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAO4B,OAAP;AACD;;AAED,SAAStB,QAAT,CAAkBpC,MAAlB,EAA0BwB,KAA1B,EAAiC;AAC/B,MAAIiC,OAAO,GAAGzD,MAAM,CAACyD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAACjC,KAAK,CAACM,EAAP,CAAP,IAAqB,CAAC9B,MAAM,CAACY,MAAjC,EAAyC;AACvC,QAAIzN,EAAE,GAAG,IAAI4Q,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6CvC,KAAK,CAACQ,SAAN,CAAgBC,EAA7D,CAAT;AACAT,IAAAA,KAAK,CAACC,KAAN,GAAc,CAACgC,OAAO,CAACjC,KAAK,CAACM,EAAP,CAAtB;AACA2B,IAAAA,OAAO,CAACjC,KAAK,CAACM,EAAP,CAAP,GAAoB,CAAC3O,EAAD,EAAKqO,KAAK,CAACwC,IAAX,CAApB;AACD,GAJD,MAIO,IAAIhE,MAAM,CAACY,MAAX,EAAmB;AACxBwB,IAAAA,QAAQ,CAACpC,MAAM,CAACY,MAAR,EAAgBY,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwB3B,MAAxB,EAAgC8B,EAAhC,EAAoC;AAClC,MAAI2B,OAAO,GAAGzD,MAAM,CAACyD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAAC3B,EAAD,CAAR,IAAgB9B,MAAM,CAACY,MAA3B,EAAmC;AACjC,WAAOe,cAAc,CAAC3B,MAAM,CAACY,MAAR,EAAgBkB,EAAhB,CAArB;AACD;;AAED,MAAIpB,aAAa,CAACoB,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACDpB,EAAAA,aAAa,CAACoB,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAImC,MAAM,GAAGjE,MAAM,CAACkE,KAAP,CAAapC,EAAb,CAAb;AAEAnB,EAAAA,cAAc,CAAC1M,IAAf,CAAoB,CAAC+L,MAAD,EAAS8B,EAAT,CAApB;;AAEA,MAAImC,MAAM,IAAIA,MAAM,CAAC9D,GAAjB,IAAwB8D,MAAM,CAAC9D,GAAP,CAAWG,gBAAX,CAA4BtU,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAOwX,UAAU,CAAC5B,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAAV,CAAqCqC,IAArC,CAA0C,UAAUrC,EAAV,EAAc;AAC7D,WAAOH,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAASQ,YAAT,CAAsBtC,MAAtB,EAA8B8B,EAA9B,EAAkC;AAChC,MAAImC,MAAM,GAAGjE,MAAM,CAACkE,KAAP,CAAapC,EAAb,CAAb;AACA9B,EAAAA,MAAM,CAACK,OAAP,GAAiB,EAAjB;;AACA,MAAI4D,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAAC9D,GAAP,CAAWC,IAAX,GAAkBJ,MAAM,CAACK,OAAzB;AACD;;AAED,MAAI4D,MAAM,IAAIA,MAAM,CAAC9D,GAAjB,IAAwB8D,MAAM,CAAC9D,GAAP,CAAWI,iBAAX,CAA6BvU,MAAzD,EAAiE;AAC/DiY,IAAAA,MAAM,CAAC9D,GAAP,CAAWI,iBAAX,CAA6BgB,OAA7B,CAAqC,UAAU6C,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAACpE,MAAM,CAACK,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAOL,MAAM,CAACkE,KAAP,CAAapC,EAAb,CAAP;AACA9B,EAAAA,MAAM,CAAC8B,EAAD,CAAN;AAEAmC,EAAAA,MAAM,GAAGjE,MAAM,CAACkE,KAAP,CAAapC,EAAb,CAAT;;AACA,MAAImC,MAAM,IAAIA,MAAM,CAAC9D,GAAjB,IAAwB8D,MAAM,CAAC9D,GAAP,CAAWG,gBAAX,CAA4BtU,MAAxD,EAAgE;AAC9DiY,IAAAA,MAAM,CAAC9D,GAAP,CAAWG,gBAAX,CAA4BiB,OAA5B,CAAoC,UAAU6C,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"tests.a871eed2.js","sourceRoot":"..","sourcesContent":["export function merge(...sets:Array<string>):string {\n\tif (sets.length > 1) {\n\t\tsets[0] = sets[0].slice(0, -1);\n\t\tconst xl = sets.length - 1;\n\t\tfor (let x = 1; x < xl; ++x) {\n\t\t\tsets[x] = sets[x].slice(1, -1);\n\t\t}\n\t\tsets[xl] = sets[xl].slice(1);\n\t\treturn sets.join('');\n\t} else {\n\t\treturn sets[0];\n\t}\n}\n\nexport function subexp(str:string):string {\n\treturn \"(?:\" + str + \")\";\n}\n\nexport function typeOf(o:any):string {\n\treturn o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\n}\n\nexport function toUpperCase(str:string):string {\n\treturn str.toUpperCase();\n}\n\nexport function toArray(obj:any):Array<any> {\n\treturn obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\n}\n\n\nexport function assign(target: object, source: any): any {\n\tconst obj = target as any;\n\tif (source) {\n\t\tfor (const key in source) {\n\t\t\tobj[key] = source[key];\n\t\t}\n\t}\n\treturn obj;\n}","import { URIRegExps } from \"./uri\";\nimport { merge, subexp } from \"./util\";\n\nexport function buildExps(isIRI:boolean):URIRegExps {\n\tconst\n\t\tALPHA$$ = \"[A-Za-z]\",\n\t\tCR$ = \"[\\\\x0D]\",\n\t\tDIGIT$$ = \"[0-9]\",\n\t\tDQUOTE$$ = \"[\\\\x22]\",\n\t\tHEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),  //case-insensitive\n\t\tLF$$ = \"[\\\\x0A]\",\n\t\tSP$$ = \"[\\\\x20]\",\n\t\tPCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),  //expanded\n\t\tGEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n\t\tSUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n\t\tRESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n\t\tUCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",  //subset, excludes bidi control characters\n\t\tIPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",  //subset\n\t\tUNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n\t\tSCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n\t\tUSERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n\t\tDEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n\t\tDEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),  //relaxed parsing rules\n\t\tIPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n\t\tH16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n\t\tLS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n\t\tIPV6ADDRESS1$ = subexp(                                                            subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$), //                           6( h16 \":\" ) ls32\n\t\tIPV6ADDRESS2$ = subexp(                                                 \"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$), //                      \"::\" 5( h16 \":\" ) ls32\n\t\tIPV6ADDRESS3$ = subexp(subexp(                                 H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$), //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n\t\tIPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$), //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n\t\tIPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$), //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n\t\tIPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" +        H16$ + \"\\\\:\"          + LS32$), //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n\t\tIPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\"                                + LS32$), //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n\t\tIPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\"                                + H16$ ), //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n\t\tIPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"                                       ), //[ *6( h16 \":\" ) h16 ] \"::\"\n\t\tIPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n\t\tZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),  //RFC 6874\n\t\tIPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),  //RFC 6874\n\t\tIPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),  //RFC 6874, with relaxed parsing rules\n\t\tIPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n\t\tIP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),  //RFC 6874\n\t\tREG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n\t\tHOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n\t\tPORT$ = subexp(DIGIT$$ + \"*\"),\n\t\tAUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n\t\tPCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n\t\tSEGMENT$ = subexp(PCHAR$ + \"*\"),\n\t\tSEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n\t\tSEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n\t\tPATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n\t\tPATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),  //simplified\n\t\tPATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n\t\tPATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tQUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n\t\tFRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n\t\tHIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tURI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tRELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n\t\tRELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tURI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n\t\tABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n\n\t\tGENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tRELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n\t\tSAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tAUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\"\n\t;\n\n\treturn {\n\t\tNOT_SCHEME : new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n\t\tNOT_USERINFO : new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_HOST : new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH : new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH_NOSCHEME : new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_QUERY : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n\t\tNOT_FRAGMENT : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n\t\tESCAPE : new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tUNRESERVED : new RegExp(UNRESERVED$$, \"g\"),\n\t\tOTHER_CHARS : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n\t\tPCT_ENCODED : new RegExp(PCT_ENCODED$, \"g\"),\n\t\tIPV4ADDRESS : new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n\t\tIPV6ADDRESS : new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\")  //RFC 6874, with relaxed parsing rules\n\t};\n}\n\nexport default buildExps(false);\n","import { URIRegExps } from \"./uri\";\nimport { buildExps } from \"./regexps-uri\";\n\nexport default buildExps(true);\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport default punycode;\n","/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\n\nimport URI_PROTOCOL from \"./regexps-uri\";\nimport IRI_PROTOCOL from \"./regexps-iri\";\nimport punycode from \"punycode\";\nimport { toUpperCase, typeOf, assign } from \"./util\";\n\nexport interface URIComponents {\n\tscheme?:string;\n\tuserinfo?:string;\n\thost?:string;\n\tport?:number|string;\n\tpath?:string;\n\tquery?:string;\n\tfragment?:string;\n\treference?:string;\n\terror?:string;\n}\n\nexport interface URIOptions {\n\tscheme?:string;\n\treference?:string;\n\ttolerant?:boolean;\n\tabsolutePath?:boolean;\n\tiri?:boolean;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n}\n\nexport interface URISchemeHandler<Components extends URIComponents = URIComponents, Options extends URIOptions = URIOptions, ParentComponents extends URIComponents = URIComponents> {\n\tscheme:string;\n\tparse(components:ParentComponents, options:Options):Components;\n\tserialize(components:Components, options:Options):ParentComponents;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n\tabsolutePath?:boolean;\n}\n\nexport interface URIRegExps {\n\tNOT_SCHEME : RegExp,\n\tNOT_USERINFO : RegExp,\n\tNOT_HOST : RegExp,\n\tNOT_PATH : RegExp,\n\tNOT_PATH_NOSCHEME : RegExp,\n\tNOT_QUERY : RegExp,\n\tNOT_FRAGMENT : RegExp,\n\tESCAPE : RegExp,\n\tUNRESERVED : RegExp,\n\tOTHER_CHARS : RegExp,\n\tPCT_ENCODED : RegExp,\n\tIPV4ADDRESS : RegExp,\n\tIPV6ADDRESS : RegExp,\n}\n\nexport const SCHEMES:{[scheme:string]:URISchemeHandler} = {};\n\nexport function pctEncChar(chr:string):string {\n\tconst c = chr.charCodeAt(0);\n\tlet e:string;\n\n\tif (c < 16) e = \"%0\" + c.toString(16).toUpperCase();\n\telse if (c < 128) e = \"%\" + c.toString(16).toUpperCase();\n\telse if (c < 2048) e = \"%\" + ((c >> 6) | 192).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\telse e = \"%\" + ((c >> 12) | 224).toString(16).toUpperCase() + \"%\" + (((c >> 6) & 63) | 128).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\n\treturn e;\n}\n\nexport function pctDecChars(str:string):string {\n\tlet newStr = \"\";\n\tlet i = 0;\n\tconst il = str.length;\n\n\twhile (i < il) {\n\t\tconst c = parseInt(str.substr(i + 1, 2), 16);\n\n\t\tif (c < 128) {\n\t\t\tnewStr += String.fromCharCode(c);\n\t\t\ti += 3;\n\t\t}\n\t\telse if (c >= 194 && c < 224) {\n\t\t\tif ((il - i) >= 6) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 6);\n\t\t\t}\n\t\t\ti += 6;\n\t\t}\n\t\telse if (c >= 224) {\n\t\t\tif ((il - i) >= 9) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tconst c3 = parseInt(str.substr(i + 7, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 9);\n\t\t\t}\n\t\t\ti += 9;\n\t\t}\n\t\telse {\n\t\t\tnewStr += str.substr(i, 3);\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\treturn newStr;\n}\n\nfunction _normalizeComponentEncoding(components:URIComponents, protocol:URIRegExps) {\n\tfunction decodeUnreserved(str:string):string {\n\t\tconst decStr = pctDecChars(str);\n\t\treturn (!decStr.match(protocol.UNRESERVED) ? str : decStr);\n\t}\n\n\tif (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n\tif (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace((components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME), pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\n\treturn components;\n};\n\nfunction _stripLeadingZeros(str:string):string {\n\treturn str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\n\nfunction _normalizeIPv4(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV4ADDRESS) || [];\n\tconst [, address] = matches;\n\t\n\tif (address) {\n\t\treturn address.split(\".\").map(_stripLeadingZeros).join(\".\");\n\t} else {\n\t\treturn host;\n\t}\n}\n\nfunction _normalizeIPv6(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV6ADDRESS) || [];\n\tconst [, address, zone] = matches;\n\n\tif (address) {\n\t\tconst [last, first] = address.toLowerCase().split('::').reverse();\n\t\tconst firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n\t\tconst lastFields = last.split(\":\").map(_stripLeadingZeros);\n\t\tconst isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n\t\tconst fieldCount = isLastFieldIPv4Address ? 7 : 8;\n\t\tconst lastFieldsStart = lastFields.length - fieldCount;\n\t\tconst fields = Array<string>(fieldCount);\n\n\t\tfor (let x = 0; x < fieldCount; ++x) {\n\t\t\tfields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n\t\t}\n\n\t\tif (isLastFieldIPv4Address) {\n\t\t\tfields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n\t\t}\n\n\t\tconst allZeroFields = fields.reduce<Array<{index:number,length:number}>>((acc, field, index) => {\n\t\t\tif (!field || field === \"0\") {\n\t\t\t\tconst lastLongest = acc[acc.length - 1];\n\t\t\t\tif (lastLongest && lastLongest.index + lastLongest.length === index) {\n\t\t\t\t\tlastLongest.length++;\n\t\t\t\t} else {\n\t\t\t\t\tacc.push({ index, length : 1 });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\n\t\tconst longestZeroFields = allZeroFields.sort((a, b) => b.length - a.length)[0];\n\n\t\tlet newHost:string;\n\t\tif (longestZeroFields && longestZeroFields.length > 1) {\n\t\t\tconst newFirst = fields.slice(0, longestZeroFields.index) ;\n\t\t\tconst newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n\t\t\tnewHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n\t\t} else {\n\t\t\tnewHost = fields.join(\":\");\n\t\t}\n\n\t\tif (zone) {\n\t\t\tnewHost += \"%\" + zone;\n\t\t}\n\n\t\treturn newHost;\n\t} else {\n\t\treturn host;\n\t}\n}\n\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nconst NO_MATCH_IS_UNDEFINED = (<RegExpMatchArray>(\"\").match(/(){0}/))[1] === undefined;\n\nexport function parse(uriString:string, options:URIOptions = {}):URIComponents {\n\tconst components:URIComponents = {};\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\n\tif (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n\n\tconst matches = uriString.match(URI_PARSE);\n\n\tif (matches) {\n\t\tif (NO_MATCH_IS_UNDEFINED) {\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1];\n\t\t\tcomponents.userinfo = matches[3];\n\t\t\tcomponents.host = matches[4];\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = matches[7];\n\t\t\tcomponents.fragment = matches[8];\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = matches[5];\n\t\t\t}\n\t\t} else {  //IE FIX for improper RegExp matching\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1] || undefined;\n\t\t\tcomponents.userinfo = (uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined);\n\t\t\tcomponents.host = (uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined);\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = (uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined);\n\t\t\tcomponents.fragment = (uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined);\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = (uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (components.host) {\n\t\t\t//normalize IP hosts\n\t\t\tcomponents.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n\t\t}\n\n\t\t//determine reference type\n\t\tif (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n\t\t\tcomponents.reference = \"same-document\";\n\t\t} else if (components.scheme === undefined) {\n\t\t\tcomponents.reference = \"relative\";\n\t\t} else if (components.fragment === undefined) {\n\t\t\tcomponents.reference = \"absolute\";\n\t\t} else {\n\t\t\tcomponents.reference = \"uri\";\n\t\t}\n\n\t\t//check for reference errors\n\t\tif (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n\t\t\tcomponents.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n\t\t}\n\n\t\t//find scheme handler\n\t\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t\t//check if scheme can't handle IRIs\n\t\tif (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n\t\t\t//if host component is a domain name\n\t\t\tif (components.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost))) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\tcomponents.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//convert IRI -> URI\n\t\t\t_normalizeComponentEncoding(components, URI_PROTOCOL);\n\t\t} else {\n\t\t\t//normalize encodings\n\t\t\t_normalizeComponentEncoding(components, protocol);\n\t\t}\n\n\t\t//perform scheme specific parsing\n\t\tif (schemeHandler && schemeHandler.parse) {\n\t\t\tschemeHandler.parse(components, options);\n\t\t}\n\t} else {\n\t\tcomponents.error = components.error || \"URI can not be parsed.\";\n\t}\n\n\treturn components;\n};\n\nfunction _recomposeAuthority(components:URIComponents, options:URIOptions):string|undefined {\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\tif (components.userinfo !== undefined) {\n\t\turiTokens.push(components.userinfo);\n\t\turiTokens.push(\"@\");\n\t}\n\n\tif (components.host !== undefined) {\n\t\t//normalize IP hosts, add brackets and escape zone separator for IPv6\n\t\turiTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, (_, $1, $2) => \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\"));\n\t}\n\n\tif (typeof components.port === \"number\") {\n\t\turiTokens.push(\":\");\n\t\turiTokens.push(components.port.toString(10));\n\t}\n\n\treturn uriTokens.length ? uriTokens.join(\"\") : undefined;\n};\n\nconst RDS1 = /^\\.\\.?\\//;\nconst RDS2 = /^\\/\\.(\\/|$)/;\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\nconst RDS4 = /^\\.\\.?$/;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\n\nexport function removeDotSegments(input:string):string {\n\tconst output:Array<string> = [];\n\n\twhile (input.length) {\n\t\tif (input.match(RDS1)) {\n\t\t\tinput = input.replace(RDS1, \"\");\n\t\t} else if (input.match(RDS2)) {\n\t\t\tinput = input.replace(RDS2, \"/\");\n\t\t} else if (input.match(RDS3)) {\n\t\t\tinput = input.replace(RDS3, \"/\");\n\t\t\toutput.pop();\n\t\t} else if (input === \".\" || input === \"..\") {\n\t\t\tinput = \"\";\n\t\t} else {\n\t\t\tconst im = input.match(RDS5);\n\t\t\tif (im) {\n\t\t\t\tconst s = im[0];\n\t\t\t\tinput = input.slice(s.length);\n\t\t\t\toutput.push(s);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unexpected dot segment condition\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output.join(\"\");\n};\n\nexport function serialize(components:URIComponents, options:URIOptions = {}):string {\n\tconst protocol = (options.iri ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\t//find scheme handler\n\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t//perform scheme specific serialization\n\tif (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n\n\tif (components.host) {\n\t\t//if host component is an IPv6 address\n\t\tif (protocol.IPV6ADDRESS.test(components.host)) {\n\t\t\t//TODO: normalize IPv6 address as per RFC 5952\n\t\t}\n\n\t\t//if host component is a domain name\n\t\telse if (options.domainHost || (schemeHandler && schemeHandler.domainHost)) {\n\t\t\t//convert IDN via punycode\n\t\t\ttry {\n\t\t\t\tcomponents.host = (!options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host));\n\t\t\t} catch (e) {\n\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t}\n\t\t}\n\t}\n\n\t//normalize encoding\n\t_normalizeComponentEncoding(components, protocol);\n\n\tif (options.reference !== \"suffix\" && components.scheme) {\n\t\turiTokens.push(components.scheme);\n\t\turiTokens.push(\":\");\n\t}\n\n\tconst authority = _recomposeAuthority(components, options);\n\tif (authority !== undefined) {\n\t\tif (options.reference !== \"suffix\") {\n\t\t\turiTokens.push(\"//\");\n\t\t}\n\n\t\turiTokens.push(authority);\n\n\t\tif (components.path && components.path.charAt(0) !== \"/\") {\n\t\t\turiTokens.push(\"/\");\n\t\t}\n\t}\n\n\tif (components.path !== undefined) {\n\t\tlet s = components.path;\n\n\t\tif (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n\t\t\ts = removeDotSegments(s);\n\t\t}\n\n\t\tif (authority === undefined) {\n\t\t\ts = s.replace(/^\\/\\//, \"/%2F\");  //don't allow the path to start with \"//\"\n\t\t}\n\n\t\turiTokens.push(s);\n\t}\n\n\tif (components.query !== undefined) {\n\t\turiTokens.push(\"?\");\n\t\turiTokens.push(components.query);\n\t}\n\n\tif (components.fragment !== undefined) {\n\t\turiTokens.push(\"#\");\n\t\turiTokens.push(components.fragment);\n\t}\n\n\treturn uriTokens.join(\"\");  //merge tokens into a string\n};\n\nexport function resolveComponents(base:URIComponents, relative:URIComponents, options:URIOptions = {}, skipNormalization?:boolean):URIComponents {\n\tconst target:URIComponents = {};\n\n\tif (!skipNormalization) {\n\t\tbase = parse(serialize(base, options), options);  //normalize base components\n\t\trelative = parse(serialize(relative, options), options);  //normalize relative components\n\t}\n\toptions = options || {};\n\n\tif (!options.tolerant && relative.scheme) {\n\t\ttarget.scheme = relative.scheme;\n\t\t//target.authority = relative.authority;\n\t\ttarget.userinfo = relative.userinfo;\n\t\ttarget.host = relative.host;\n\t\ttarget.port = relative.port;\n\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\ttarget.query = relative.query;\n\t} else {\n\t\tif (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n\t\t\t//target.authority = relative.authority;\n\t\t\ttarget.userinfo = relative.userinfo;\n\t\t\ttarget.host = relative.host;\n\t\t\ttarget.port = relative.port;\n\t\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\t\ttarget.query = relative.query;\n\t\t} else {\n\t\t\tif (!relative.path) {\n\t\t\t\ttarget.path = base.path;\n\t\t\t\tif (relative.query !== undefined) {\n\t\t\t\t\ttarget.query = relative.query;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.query = base.query;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (relative.path.charAt(0) === \"/\") {\n\t\t\t\t\ttarget.path = removeDotSegments(relative.path);\n\t\t\t\t} else {\n\t\t\t\t\tif ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n\t\t\t\t\t\ttarget.path = \"/\" + relative.path;\n\t\t\t\t\t} else if (!base.path) {\n\t\t\t\t\t\ttarget.path = relative.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.path = removeDotSegments(target.path);\n\t\t\t\t}\n\t\t\t\ttarget.query = relative.query;\n\t\t\t}\n\t\t\t//target.authority = base.authority;\n\t\t\ttarget.userinfo = base.userinfo;\n\t\t\ttarget.host = base.host;\n\t\t\ttarget.port = base.port;\n\t\t}\n\t\ttarget.scheme = base.scheme;\n\t}\n\n\ttarget.fragment = relative.fragment;\n\n\treturn target;\n};\n\nexport function resolve(baseURI:string, relativeURI:string, options?:URIOptions):string {\n\tconst schemelessOptions = assign({ scheme : 'null' }, options);\n\treturn serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n};\n\nexport function normalize(uri:string, options?:URIOptions):string;\nexport function normalize(uri:URIComponents, options?:URIOptions):URIComponents;\nexport function normalize(uri:any, options?:URIOptions):any {\n\tif (typeof uri === \"string\") {\n\t\turi = serialize(parse(uri, options), options);\n\t} else if (typeOf(uri) === \"object\") {\n\t\turi = parse(serialize(<URIComponents>uri, options), options);\n\t}\n\n\treturn uri;\n};\n\nexport function equal(uriA:string, uriB:string, options?: URIOptions):boolean;\nexport function equal(uriA:URIComponents, uriB:URIComponents, options?:URIOptions):boolean;\nexport function equal(uriA:any, uriB:any, options?:URIOptions):boolean {\n\tif (typeof uriA === \"string\") {\n\t\turiA = serialize(parse(uriA, options), options);\n\t} else if (typeOf(uriA) === \"object\") {\n\t\turiA = serialize(<URIComponents>uriA, options);\n\t}\n\n\tif (typeof uriB === \"string\") {\n\t\turiB = serialize(parse(uriB, options), options);\n\t} else if (typeOf(uriB) === \"object\") {\n\t\turiB = serialize(<URIComponents>uriB, options);\n\t}\n\n\treturn uriA === uriB;\n};\n\nexport function escapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE), pctEncChar);\n};\n\nexport function unescapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED), pctDecChars);\n};\n","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"http\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\t//report missing host\n\t\tif (!components.host) {\n\t\t\tcomponents.error = components.error || \"HTTP URIs must have a host.\";\n\t\t}\n\n\t\treturn components;\n\t},\n\n\tserialize : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\t//normalize the default port\n\t\tif (components.port === (String(components.scheme).toLowerCase() !== \"https\" ? 80 : 443) || components.port === \"\") {\n\t\t\tcomponents.port = undefined;\n\t\t}\n\t\t\n\t\t//normalize the empty path\n\t\tif (!components.path) {\n\t\t\tcomponents.path = \"/\";\n\t\t}\n\n\t\t//NOTE: We do not parse query strings for HTTP URIs\n\t\t//as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n\t\t//and not the HTTP spec.\n\n\t\treturn components;\n\t}\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport http from \"./http\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"https\",\n\tdomainHost : http.domainHost,\n\tparse : http.parse,\n\tserialize : http.serialize\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, pctDecChars, unescapeComponent } from \"../uri\";\nimport punycode from \"punycode\";\nimport { merge, subexp, toUpperCase, toArray } from \"../util\";\n\nexport interface MailtoHeaders {\n\t[hfname:string]:string\n}\n\nexport interface MailtoComponents extends URIComponents {\n\tto:Array<string>,\n\theaders?:MailtoHeaders,\n\tsubject?:string,\n\tbody?:string\n}\n\nconst O:MailtoHeaders = {};\nconst isIRI = true;\n\n//RFC 3986\nconst UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nconst HEXDIG$$ = \"[0-9A-Fa-f]\";  //case-insensitive\nconst PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$));  //expanded\n\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nconst ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nconst QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nconst VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nconst DOT_ATOM_TEXT$ = subexp(ATEXT$$ + \"+\" + subexp(\"\\\\.\" + ATEXT$$ + \"+\") + \"*\");\nconst QUOTED_PAIR$ = subexp(\"\\\\\\\\\" + VCHAR$$);\nconst QCONTENT$ = subexp(QTEXT$$ + \"|\" + QUOTED_PAIR$);\nconst QUOTED_STRING$ = subexp('\\\\\"' + QCONTENT$ + \"*\" + '\\\\\"');\n\n//RFC 6068\nconst DTEXT_NO_OBS$$ = \"[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]\";  //%d33-90 / %d94-126\nconst SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nconst QCHAR$ = subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$ + \"|\" + SOME_DELIMS$$);\nconst DOMAIN$ = subexp(DOT_ATOM_TEXT$ + \"|\" + \"\\\\[\" + DTEXT_NO_OBS$$ + \"*\" + \"\\\\]\");\nconst LOCAL_PART$ = subexp(DOT_ATOM_TEXT$ + \"|\" + QUOTED_STRING$);\nconst ADDR_SPEC$ = subexp(LOCAL_PART$ + \"\\\\@\" + DOMAIN$);\nconst TO$ = subexp(ADDR_SPEC$ + subexp(\"\\\\,\" + ADDR_SPEC$) + \"*\");\nconst HFNAME$ = subexp(QCHAR$ + \"*\");\nconst HFVALUE$ = HFNAME$;\nconst HFIELD$ = subexp(HFNAME$ + \"\\\\=\" + HFVALUE$);\nconst HFIELDS2$ = subexp(HFIELD$ + subexp(\"\\\\&\" + HFIELD$) + \"*\");\nconst HFIELDS$ = subexp(\"\\\\?\" + HFIELDS2$);\nconst MAILTO_URI = new RegExp(\"^mailto\\\\:\" + TO$ + \"?\" + HFIELDS$ + \"?$\");\n\nconst UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nconst PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nconst NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nconst NOT_DOMAIN = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", \"[\\\\[]\", DTEXT_NO_OBS$$, \"[\\\\]]\"), \"g\");\nconst NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nconst NOT_HFVALUE = NOT_HFNAME;\nconst TO = new RegExp(\"^\" + TO$ + \"$\");\nconst HFIELDS = new RegExp(\"^\" + HFIELDS2$ + \"$\");\n\nfunction decodeUnreserved(str:string):string {\n\tconst decStr = pctDecChars(str);\n\treturn (!decStr.match(UNRESERVED) ? str : decStr);\n}\n\nconst handler:URISchemeHandler<MailtoComponents> =  {\n\tscheme : \"mailto\",\n\n\tparse : function (components:URIComponents, options:URIOptions):MailtoComponents {\n\t\tconst mailtoComponents = components as MailtoComponents;\n\t\tconst to = mailtoComponents.to = (mailtoComponents.path ? mailtoComponents.path.split(\",\") : []);\n\t\tmailtoComponents.path = undefined;\n\n\t\tif (mailtoComponents.query) {\n\t\t\tlet unknownHeaders = false\n\t\t\tconst headers:MailtoHeaders = {};\n\t\t\tconst hfields = mailtoComponents.query.split(\"&\");\n\n\t\t\tfor (let x = 0, xl = hfields.length; x < xl; ++x) {\n\t\t\t\tconst hfield = hfields[x].split(\"=\");\n\n\t\t\t\tswitch (hfield[0]) {\n\t\t\t\t\tcase \"to\":\n\t\t\t\t\t\tconst toAddrs = hfield[1].split(\",\");\n\t\t\t\t\t\tfor (let x = 0, xl = toAddrs.length; x < xl; ++x) {\n\t\t\t\t\t\t\tto.push(toAddrs[x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"subject\":\n\t\t\t\t\t\tmailtoComponents.subject = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\tmailtoComponents.body = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tunknownHeaders = true;\n\t\t\t\t\t\theaders[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (unknownHeaders) mailtoComponents.headers = headers;\n\t\t}\n\n\t\tmailtoComponents.query = undefined;\n\n\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\tconst addr = to[x].split(\"@\");\n\n\t\t\taddr[0] = unescapeComponent(addr[0]);\n\n\t\t\tif (!options.unicodeSupport) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\taddr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taddr[1] = unescapeComponent(addr[1], options).toLowerCase();\n\t\t\t}\n\n\t\t\tto[x] = addr.join(\"@\");\n\t\t}\n\n\t\treturn mailtoComponents;\n\t},\n\n\tserialize : function (mailtoComponents:MailtoComponents, options:URIOptions):URIComponents {\n\t\tconst components = mailtoComponents as URIComponents;\n\t\tconst to = toArray(mailtoComponents.to);\n\t\tif (to) {\n\t\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\t\tconst toAddr = String(to[x]);\n\t\t\t\tconst atIdx = toAddr.lastIndexOf(\"@\");\n\t\t\t\tconst localPart = (toAddr.slice(0, atIdx)).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n\t\t\t\tlet domain = toAddr.slice(atIdx + 1);\n\n\t\t\t\t//convert IDN via punycode\n\t\t\t\ttry {\n\t\t\t\t\tdomain = (!options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t\t}\n\n\t\t\t\tto[x] = localPart + \"@\" + domain;\n\t\t\t}\n\n\t\t\tcomponents.path = to.join(\",\");\n\t\t}\n\n\t\tconst headers = mailtoComponents.headers = mailtoComponents.headers || {};\n\n\t\tif (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n\t\tif (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n\n\t\tconst fields = [];\n\t\tfor (const name in headers) {\n\t\t\tif (headers[name] !== O[name]) {\n\t\t\t\tfields.push(\n\t\t\t\t\tname.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\theaders[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (fields.length) {\n\t\t\tcomponents.query = fields.join(\"&\");\n\t\t}\n\n\t\treturn components;\n\t}\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, SCHEMES } from \"../uri\";\n\nexport interface URNComponents extends URIComponents {\n\tnid?:string;\n\tnss?:string;\n}\n\nexport interface URNOptions extends URIOptions {\n\tnid?:string;\n}\n\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\n\n//RFC 2141\nconst handler:URISchemeHandler<URNComponents,URNOptions> = {\n\tscheme : \"urn\",\n\n\tparse : function (components:URIComponents, options:URNOptions):URNComponents {\n\t\tconst matches = components.path && components.path.match(URN_PARSE);\n\t\tlet urnComponents = components as URNComponents;\n\n\t\tif (matches) {\n\t\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\t\tconst nid = matches[1].toLowerCase();\n\t\t\tconst nss = matches[2];\n\t\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\t\turnComponents.nid = nid;\n\t\t\turnComponents.nss = nss;\n\t\t\turnComponents.path = undefined;\n\n\t\t\tif (schemeHandler) {\n\t\t\t\turnComponents = schemeHandler.parse(urnComponents, options) as URNComponents;\n\t\t\t}\n\t\t} else {\n\t\t\turnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n\t\t}\n\n\t\treturn urnComponents;\n\t},\n\n\tserialize : function (urnComponents:URNComponents, options:URNOptions):URIComponents {\n\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\tconst nid = urnComponents.nid;\n\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\tif (schemeHandler) {\n\t\t\turnComponents = schemeHandler.serialize(urnComponents, options) as URNComponents;\n\t\t}\n\n\t\tconst uriComponents = urnComponents as URIComponents;\n\t\tconst nss = urnComponents.nss;\n\t\turiComponents.path = `${nid || options.nid}:${nss}`;\n\n\t\treturn uriComponents;\n\t},\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { URNComponents } from \"./urn\";\nimport { SCHEMES } from \"../uri\";\n\nexport interface UUIDComponents extends URNComponents {\n\tuuid?: string;\n}\n\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\nconst UUID_PARSE = /^[0-9A-Fa-f\\-]{36}/;\n\n//RFC 4122\nconst handler:URISchemeHandler<UUIDComponents, URIOptions, URNComponents> = {\n\tscheme : \"urn:uuid\",\n\n\tparse : function (urnComponents:URNComponents, options:URIOptions):UUIDComponents {\n\t\tconst uuidComponents = urnComponents as UUIDComponents;\n\t\tuuidComponents.uuid = uuidComponents.nss;\n\t\tuuidComponents.nss = undefined;\n\n\t\tif (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n\t\t\tuuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n\t\t}\n\n\t\treturn uuidComponents;\n\t},\n\n\tserialize : function (uuidComponents:UUIDComponents, options:URIOptions):URNComponents {\n\t\tconst urnComponents = uuidComponents as URNComponents;\n\t\t//normalize UUID\n\t\turnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n\t\treturn urnComponents;\n\t},\n};\n\nexport default handler;","import { SCHEMES } from \"./uri\";\n\nimport http from \"./schemes/http\";\nSCHEMES[http.scheme] = http;\n\nimport https from \"./schemes/https\";\nSCHEMES[https.scheme] = https;\n\nimport mailto from \"./schemes/mailto\";\nSCHEMES[mailto.scheme] = mailto;\n\nimport urn from \"./schemes/urn\";\nSCHEMES[urn.scheme] = urn;\n\nimport uuid from \"./schemes/urn-uuid\";\nSCHEMES[uuid.scheme] = uuid;\n\nexport * from \"./uri\";\n","//\n//\n// Tests\n//\n//\n\nif (typeof URI === \"undefined\") {\n\tvar URI = require(\"../dist/es5/uri.all\");\n}\n\ntest(\"Acquire URI\", function () {\n\t//URI = require(\"./uri\").URI;\n\tok(URI);\n});\n\ntest(\"URI Parsing\", function () {\n\tvar components;\n\n\t//scheme\n\tcomponents = URI.parse(\"uri:\");\n\tstrictEqual(components.error, undefined, \"scheme errors\");\n\tstrictEqual(components.scheme, \"uri\", \"scheme\");\n\t//strictEqual(components.authority, undefined, \"authority\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, undefined, \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, undefined, \"fragment\");\n\n\t//userinfo\n\tcomponents = URI.parse(\"//@\");\n\tstrictEqual(components.error, undefined, \"userinfo errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\t//strictEqual(components.authority, \"@\", \"authority\");\n\tstrictEqual(components.userinfo, \"\", \"userinfo\");\n\tstrictEqual(components.host, \"\", \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, undefined, \"fragment\");\n\n\t//host\n\tcomponents = URI.parse(\"//\");\n\tstrictEqual(components.error, undefined, \"host errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\t//strictEqual(components.authority, \"\", \"authority\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, \"\", \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, undefined, \"fragment\");\n\n\t//port\n\tcomponents = URI.parse(\"//:\");\n\tstrictEqual(components.error, undefined, \"port errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\t//strictEqual(components.authority, \":\", \"authority\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, \"\", \"host\");\n\tstrictEqual(components.port, \"\", \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, undefined, \"fragment\");\n\n\t//path\n\tcomponents = URI.parse(\"\");\n\tstrictEqual(components.error, undefined, \"path errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\t//strictEqual(components.authority, undefined, \"authority\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, undefined, \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, undefined, \"fragment\");\n\n\t//query\n\tcomponents = URI.parse(\"?\");\n\tstrictEqual(components.error, undefined, \"query errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\t//strictEqual(components.authority, undefined, \"authority\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, undefined, \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, \"\", \"query\");\n\tstrictEqual(components.fragment, undefined, \"fragment\");\n\n\t//fragment\n\tcomponents = URI.parse(\"#\");\n\tstrictEqual(components.error, undefined, \"fragment errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\t//strictEqual(components.authority, undefined, \"authority\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, undefined, \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, \"\", \"fragment\");\n\n\t//fragment with character tabulation\n\tcomponents = URI.parse(\"#\\t\");\n\tstrictEqual(components.error, undefined, \"path errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\t//strictEqual(components.authority, undefined, \"authority\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, undefined, \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, \"%09\", \"fragment\");\n\n\t//fragment with line feed\n\tcomponents = URI.parse(\"#\\n\");\n\tstrictEqual(components.error, undefined, \"path errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\t//strictEqual(components.authority, undefined, \"authority\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, undefined, \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, \"%0A\", \"fragment\");\n\n\t//fragment with line tabulation\n\tcomponents = URI.parse(\"#\\v\");\n\tstrictEqual(components.error, undefined, \"path errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\t//strictEqual(components.authority, undefined, \"authority\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, undefined, \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, \"%0B\", \"fragment\");\n\n\t//fragment with form feed\n\tcomponents = URI.parse(\"#\\f\");\n\tstrictEqual(components.error, undefined, \"path errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\t//strictEqual(components.authority, undefined, \"authority\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, undefined, \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, \"%0C\", \"fragment\");\n\n\t//fragment with carriage return\n\tcomponents = URI.parse(\"#\\r\");\n\tstrictEqual(components.error, undefined, \"path errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\t//strictEqual(components.authority, undefined, \"authority\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, undefined, \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, \"%0D\", \"fragment\");\n\n\t//all\n\tcomponents = URI.parse(\"uri://user:pass@example.com:123/one/two.three?q1=a1&q2=a2#body\");\n\tstrictEqual(components.error, undefined, \"all errors\");\n\tstrictEqual(components.scheme, \"uri\", \"scheme\");\n\t//strictEqual(components.authority, \"user:pass@example.com:123\", \"authority\");\n\tstrictEqual(components.userinfo, \"user:pass\", \"userinfo\");\n\tstrictEqual(components.host, \"example.com\", \"host\");\n\tstrictEqual(components.port, 123, \"port\");\n\tstrictEqual(components.path, \"/one/two.three\", \"path\");\n\tstrictEqual(components.query, \"q1=a1&q2=a2\", \"query\");\n\tstrictEqual(components.fragment, \"body\", \"fragment\");\n\n\t//IPv4address\n\tcomponents = URI.parse(\"//10.10.10.10\");\n\tstrictEqual(components.error, undefined, \"IPv4address errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, \"10.10.10.10\", \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, undefined, \"fragment\");\n\n\t//IPv6address\n\tcomponents = URI.parse(\"//[2001:db8::7]\");\n\tstrictEqual(components.error, undefined, \"IPv4address errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, \"2001:db8::7\", \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, undefined, \"fragment\");\n\n\t//mixed IPv4address & IPv6address\n\tcomponents = URI.parse(\"//[::ffff:129.144.52.38]\");\n\tstrictEqual(components.error, undefined, \"IPv4address errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, \"::ffff:129.144.52.38\", \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, undefined, \"fragment\");\n\n\t//mixed IPv4address & reg-name, example from terion-name (https://github.com/garycourt/uri-js/issues/4)\n\tcomponents = URI.parse(\"uri://10.10.10.10.example.com/en/process\");\n\tstrictEqual(components.error, undefined, \"mixed errors\");\n\tstrictEqual(components.scheme, \"uri\", \"scheme\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, \"10.10.10.10.example.com\", \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"/en/process\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, undefined, \"fragment\");\n\n\t//IPv6address, example from bkw (https://github.com/garycourt/uri-js/pull/16)\n\tcomponents = URI.parse(\"//[2606:2800:220:1:248:1893:25c8:1946]/test\");\n\tstrictEqual(components.error, undefined, \"IPv6address errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, \"2606:2800:220:1:248:1893:25c8:1946\", \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"/test\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, undefined, \"fragment\");\n\t\n\t//IPv6address, example from RFC 5952\n\tcomponents = URI.parse(\"//[2001:db8::1]:80\");\n\tstrictEqual(components.error, undefined, \"IPv6address errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, \"2001:db8::1\", \"host\");\n\tstrictEqual(components.port, 80, \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, undefined, \"fragment\");\n\n\t//IPv6address with zone identifier, RFC 6874\n\tcomponents = URI.parse(\"//[fe80::a%25en1]\");\n\tstrictEqual(components.error, undefined, \"IPv4address errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, \"fe80::a%en1\", \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, undefined, \"fragment\");\n\n\t//IPv6address with an unescaped interface specifier, example from pekkanikander (https://github.com/garycourt/uri-js/pull/22)\n\tcomponents = URI.parse(\"//[2001:db8::7%en0]\");\n\tstrictEqual(components.error, undefined, \"IPv6address interface errors\");\n\tstrictEqual(components.scheme, undefined, \"scheme\");\n\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\tstrictEqual(components.host, \"2001:db8::7%en0\", \"host\");\n\tstrictEqual(components.port, undefined, \"port\");\n\tstrictEqual(components.path, \"\", \"path\");\n\tstrictEqual(components.query, undefined, \"query\");\n\tstrictEqual(components.fragment, undefined, \"fragment\");\n});\n\ntest(\"URI Serialization\", function () {\n\tvar components = {\n\t\tscheme : undefined,\n\t\tuserinfo : undefined,\n\t\thost : undefined,\n\t\tport : undefined,\n\t\tpath : undefined,\n\t\tquery : undefined,\n\t\tfragment : undefined\n\t};\n\tstrictEqual(URI.serialize(components), \"\", \"Undefined Components\");\n\n\tcomponents = {\n\t\tscheme : \"\",\n\t\tuserinfo : \"\",\n\t\thost : \"\",\n\t\tport : 0,\n\t\tpath : \"\",\n\t\tquery : \"\",\n\t\tfragment : \"\"\n\t};\n\tstrictEqual(URI.serialize(components), \"//@:0?#\", \"Empty Components\");\n\n\tcomponents = {\n\t\tscheme : \"uri\",\n\t\tuserinfo : \"foo:bar\",\n\t\thost : \"example.com\",\n\t\tport : 1,\n\t\tpath : \"path\",\n\t\tquery : \"query\",\n\t\tfragment : \"fragment\"\n\t};\n\tstrictEqual(URI.serialize(components), \"uri://foo:bar@example.com:1/path?query#fragment\", \"All Components\");\n\n\tstrictEqual(URI.serialize({path:\"//path\"}), \"/%2Fpath\", \"Double slash path\");\n\tstrictEqual(URI.serialize({path:\"foo:bar\"}), \"foo%3Abar\", \"Colon path\");\n\tstrictEqual(URI.serialize({path:\"?query\"}), \"%3Fquery\", \"Query path\");\n\n\t//mixed IPv4address & reg-name, example from terion-name (https://github.com/garycourt/uri-js/issues/4)\n\tstrictEqual(URI.serialize({host:\"10.10.10.10.example.com\"}), \"//10.10.10.10.example.com\", \"Mixed IPv4address & reg-name\");\n\n\t//IPv6address\n\tstrictEqual(URI.serialize({host:\"2001:db8::7\"}), \"//[2001:db8::7]\", \"IPv6 Host\");\n\tstrictEqual(URI.serialize({host:\"::ffff:129.144.52.38\"}), \"//[::ffff:129.144.52.38]\", \"IPv6 Mixed Host\");\n\tstrictEqual(URI.serialize({host:\"2606:2800:220:1:248:1893:25c8:1946\"}), \"//[2606:2800:220:1:248:1893:25c8:1946]\", \"IPv6 Full Host\");\n\n\t//IPv6address with zone identifier, RFC 6874\n\tstrictEqual(URI.serialize({host:\"fe80::a%en1\"}), \"//[fe80::a%25en1]\", \"IPv6 Zone Unescaped Host\");\n\tstrictEqual(URI.serialize({host:\"fe80::a%25en1\"}), \"//[fe80::a%25en1]\", \"IPv6 Zone Escaped Host\");\n});\n\ntest(\"URI Resolving\", function () {\n\t//normal examples from RFC 3986\n\tvar base = \"uri://a/b/c/d;p?q\";\n\tstrictEqual(URI.resolve(base, \"g:h\"), \"g:h\", \"g:h\");\n\tstrictEqual(URI.resolve(base, \"g:h\"), \"g:h\", \"g:h\");\n\tstrictEqual(URI.resolve(base, \"g\"), \"uri://a/b/c/g\", \"g\");\n\tstrictEqual(URI.resolve(base, \"./g\"), \"uri://a/b/c/g\", \"./g\");\n\tstrictEqual(URI.resolve(base, \"g/\"), \"uri://a/b/c/g/\", \"g/\");\n\tstrictEqual(URI.resolve(base, \"/g\"), \"uri://a/g\", \"/g\");\n\tstrictEqual(URI.resolve(base, \"//g\"), \"uri://g\", \"//g\");\n\tstrictEqual(URI.resolve(base, \"?y\"), \"uri://a/b/c/d;p?y\", \"?y\");\n\tstrictEqual(URI.resolve(base, \"g?y\"), \"uri://a/b/c/g?y\", \"g?y\");\n\tstrictEqual(URI.resolve(base, \"#s\"), \"uri://a/b/c/d;p?q#s\", \"#s\");\n\tstrictEqual(URI.resolve(base, \"g#s\"), \"uri://a/b/c/g#s\", \"g#s\");\n\tstrictEqual(URI.resolve(base, \"g?y#s\"), \"uri://a/b/c/g?y#s\", \"g?y#s\");\n\tstrictEqual(URI.resolve(base, \";x\"), \"uri://a/b/c/;x\", \";x\");\n\tstrictEqual(URI.resolve(base, \"g;x\"), \"uri://a/b/c/g;x\", \"g;x\");\n\tstrictEqual(URI.resolve(base, \"g;x?y#s\"), \"uri://a/b/c/g;x?y#s\", \"g;x?y#s\");\n\tstrictEqual(URI.resolve(base, \"\"), \"uri://a/b/c/d;p?q\", \"\");\n\tstrictEqual(URI.resolve(base, \".\"), \"uri://a/b/c/\", \".\");\n\tstrictEqual(URI.resolve(base, \"./\"), \"uri://a/b/c/\", \"./\");\n\tstrictEqual(URI.resolve(base, \"..\"), \"uri://a/b/\", \"..\");\n\tstrictEqual(URI.resolve(base, \"../\"), \"uri://a/b/\", \"../\");\n\tstrictEqual(URI.resolve(base, \"../g\"), \"uri://a/b/g\", \"../g\");\n\tstrictEqual(URI.resolve(base, \"../..\"), \"uri://a/\", \"../..\");\n\tstrictEqual(URI.resolve(base, \"../../\"), \"uri://a/\", \"../../\");\n\tstrictEqual(URI.resolve(base, \"../../g\"), \"uri://a/g\", \"../../g\");\n\n\t//abnormal examples from RFC 3986\n\tstrictEqual(URI.resolve(base, \"../../../g\"), \"uri://a/g\", \"../../../g\");\n\tstrictEqual(URI.resolve(base, \"../../../../g\"), \"uri://a/g\", \"../../../../g\");\n\n\tstrictEqual(URI.resolve(base, \"/./g\"), \"uri://a/g\", \"/./g\");\n\tstrictEqual(URI.resolve(base, \"/../g\"), \"uri://a/g\", \"/../g\");\n\tstrictEqual(URI.resolve(base, \"g.\"), \"uri://a/b/c/g.\", \"g.\");\n\tstrictEqual(URI.resolve(base, \".g\"), \"uri://a/b/c/.g\", \".g\");\n\tstrictEqual(URI.resolve(base, \"g..\"), \"uri://a/b/c/g..\", \"g..\");\n\tstrictEqual(URI.resolve(base, \"..g\"), \"uri://a/b/c/..g\", \"..g\");\n\n\tstrictEqual(URI.resolve(base, \"./../g\"), \"uri://a/b/g\", \"./../g\");\n\tstrictEqual(URI.resolve(base, \"./g/.\"), \"uri://a/b/c/g/\", \"./g/.\");\n\tstrictEqual(URI.resolve(base, \"g/./h\"), \"uri://a/b/c/g/h\", \"g/./h\");\n\tstrictEqual(URI.resolve(base, \"g/../h\"), \"uri://a/b/c/h\", \"g/../h\");\n\tstrictEqual(URI.resolve(base, \"g;x=1/./y\"), \"uri://a/b/c/g;x=1/y\", \"g;x=1/./y\");\n\tstrictEqual(URI.resolve(base, \"g;x=1/../y\"), \"uri://a/b/c/y\", \"g;x=1/../y\");\n\n\tstrictEqual(URI.resolve(base, \"g?y/./x\"), \"uri://a/b/c/g?y/./x\", \"g?y/./x\");\n\tstrictEqual(URI.resolve(base, \"g?y/../x\"), \"uri://a/b/c/g?y/../x\", \"g?y/../x\");\n\tstrictEqual(URI.resolve(base, \"g#s/./x\"), \"uri://a/b/c/g#s/./x\", \"g#s/./x\");\n\tstrictEqual(URI.resolve(base, \"g#s/../x\"), \"uri://a/b/c/g#s/../x\", \"g#s/../x\");\n\n\tstrictEqual(URI.resolve(base, \"uri:g\"), \"uri:g\", \"uri:g\");\n\tstrictEqual(URI.resolve(base, \"uri:g\", {tolerant:true}), \"uri://a/b/c/g\", \"uri:g\");\n\n\t//examples by PAEz\n\tstrictEqual(URI.resolve(\"//www.g.com/\",\"/adf\\ngf\"), \"//www.g.com/adf%0Agf\", \"/adf\\\\ngf\");\n\tstrictEqual(URI.resolve(\"//www.g.com/error\\n/bleh/bleh\",\"..\"), \"//www.g.com/error%0A/\", \"//www.g.com/error\\\\n/bleh/bleh\");\n});\n\ntest(\"URI Normalizing\", function () {\n\t//test from RFC 3987\n\tstrictEqual(URI.normalize(\"uri://www.example.org/red%09ros\\xE9#red\"), \"uri://www.example.org/red%09ros%C3%A9#red\");\n\n\t//IPv4address\n\tstrictEqual(URI.normalize(\"//192.068.001.000\"), \"//192.68.1.0\");\n\n\t//IPv6address, example from RFC 3513\n\tstrictEqual(URI.normalize(\"http://[1080::8:800:200C:417A]/\"), \"http://[1080::8:800:200c:417a]/\");\n\n\t//IPv6address, examples from RFC 5952\n\tstrictEqual(URI.normalize(\"//[2001:0db8::0001]/\"), \"//[2001:db8::1]/\");\n\tstrictEqual(URI.normalize(\"//[2001:db8::1:0000:1]/\"), \"//[2001:db8::1:0:1]/\");\n\tstrictEqual(URI.normalize(\"//[2001:db8:0:0:0:0:2:1]/\"), \"//[2001:db8::2:1]/\");\n\tstrictEqual(URI.normalize(\"//[2001:db8:0:1:1:1:1:1]/\"), \"//[2001:db8:0:1:1:1:1:1]/\");\n\tstrictEqual(URI.normalize(\"//[2001:0:0:1:0:0:0:1]/\"), \"//[2001:0:0:1::1]/\");\n\tstrictEqual(URI.normalize(\"//[2001:db8:0:0:1:0:0:1]/\"), \"//[2001:db8::1:0:0:1]/\");\n\tstrictEqual(URI.normalize(\"//[2001:DB8::1]/\"), \"//[2001:db8::1]/\");\n\tstrictEqual(URI.normalize(\"//[0:0:0:0:0:ffff:192.0.2.1]/\"), \"//[::ffff:192.0.2.1]/\");\n\n\t//Mixed IPv4 and IPv6 address\n\tstrictEqual(URI.normalize(\"//[1:2:3:4:5:6:192.0.2.1]/\"), \"//[1:2:3:4:5:6:192.0.2.1]/\");\n\tstrictEqual(URI.normalize(\"//[1:2:3:4:5:6:192.068.001.000]/\"), \"//[1:2:3:4:5:6:192.68.1.0]/\");\n});\n\ntest(\"URI Equals\", function () {\n\t//test from RFC 3986\n\tstrictEqual(URI.equal(\"example://a/b/c/%7Bfoo%7D\", \"eXAMPLE://a/./b/../b/%63/%7bfoo%7d\"), true);\n\n\t//test from RFC 3987\n\tstrictEqual(URI.equal(\"http://example.org/~user\", \"http://example.org/%7euser\"), true);\n});\n\ntest(\"Escape Component\", function () {\n\tvar chr;\n\tfor (var d = 0; d <= 129; ++d) {\n\t\tchr = String.fromCharCode(d);\n\t\tif (!chr.match(/[\\$\\&\\+\\,\\;\\=]/)) {\n\t\t\tstrictEqual(URI.escapeComponent(chr), encodeURIComponent(chr));\n\t\t} else {\n\t\t\tstrictEqual(URI.escapeComponent(chr), chr);\n\t\t}\n\t}\n\tstrictEqual(URI.escapeComponent(\"\\u00c0\"), encodeURIComponent(\"\\u00c0\"));\n\tstrictEqual(URI.escapeComponent(\"\\u07ff\"), encodeURIComponent(\"\\u07ff\"));\n\tstrictEqual(URI.escapeComponent(\"\\u0800\"), encodeURIComponent(\"\\u0800\"));\n\tstrictEqual(URI.escapeComponent(\"\\u30a2\"), encodeURIComponent(\"\\u30a2\"));\n});\n\ntest(\"Unescape Component\", function () {\n\tvar chr;\n\tfor (var d = 0; d <= 129; ++d) {\n\t\tchr = String.fromCharCode(d);\n\t\tstrictEqual(URI.unescapeComponent(encodeURIComponent(chr)), chr);\n\t}\n\tstrictEqual(URI.unescapeComponent(encodeURIComponent(\"\\u00c0\")), \"\\u00c0\");\n\tstrictEqual(URI.unescapeComponent(encodeURIComponent(\"\\u07ff\")), \"\\u07ff\");\n\tstrictEqual(URI.unescapeComponent(encodeURIComponent(\"\\u0800\")), \"\\u0800\");\n\tstrictEqual(URI.unescapeComponent(encodeURIComponent(\"\\u30a2\")), \"\\u30a2\");\n});\n\n//\n// IRI\n//\n\n\n\nvar IRI_OPTION = { iri : true, unicodeSupport : true };\n\ntest(\"IRI Parsing\", function () {\n\tvar components = URI.parse(\"uri://us\\xA0er:pa\\uD7FFss@example.com:123/o\\uF900ne/t\\uFDCFwo.t\\uFDF0hree?q1=a1\\uF8FF\\uE000&q2=a2#bo\\uFFEFdy\", IRI_OPTION);\n\tstrictEqual(components.error, undefined, \"all errors\");\n\tstrictEqual(components.scheme, \"uri\", \"scheme\");\n\t//strictEqual(components.authority, \"us\\xA0er:pa\\uD7FFss@example.com:123\", \"authority\");\n\tstrictEqual(components.userinfo, \"us\\xA0er:pa\\uD7FFss\", \"userinfo\");\n\tstrictEqual(components.host, \"example.com\", \"host\");\n\tstrictEqual(components.port, 123, \"port\");\n\tstrictEqual(components.path, \"/o\\uF900ne/t\\uFDCFwo.t\\uFDF0hree\", \"path\");\n\tstrictEqual(components.query, \"q1=a1\\uF8FF\\uE000&q2=a2\", \"query\");\n\tstrictEqual(components.fragment, \"bo\\uFFEFdy\", \"fragment\");\n});\n\ntest(\"IRI Serialization\", function () {\n\tvar components = {\n\t\tscheme : \"uri\",\n\t\tuserinfo : \"us\\xA0er:pa\\uD7FFss\",\n\t\thost : \"example.com\",\n\t\tport : 123,\n\t\tpath : \"/o\\uF900ne/t\\uFDCFwo.t\\uFDF0hree\",\n\t\tquery : \"q1=a1\\uF8FF\\uE000&q2=a2\",\n\t\tfragment : \"bo\\uFFEFdy\\uE001\"\n\t};\n\tstrictEqual(URI.serialize(components, IRI_OPTION), \"uri://us\\xA0er:pa\\uD7FFss@example.com:123/o\\uF900ne/t\\uFDCFwo.t\\uFDF0hree?q1=a1\\uF8FF\\uE000&q2=a2#bo\\uFFEFdy%EE%80%81\");\n});\n\ntest(\"IRI Normalizing\", function () {\n\tstrictEqual(URI.normalize(\"uri://www.example.org/red%09ros\\xE9#red\", IRI_OPTION), \"uri://www.example.org/red%09ros\\xE9#red\");\n});\n\ntest(\"IRI Equals\", function () {\n\t//example from RFC 3987\n\tstrictEqual(URI.equal(\"example://a/b/c/%7Bfoo%7D/ros\\xE9\", \"eXAMPLE://a/./b/../b/%63/%7bfoo%7d/ros%C3%A9\", IRI_OPTION), true);\n});\n\ntest(\"Convert IRI to URI\", function () {\n\t//example from RFC 3987\n\tstrictEqual(URI.serialize(URI.parse(\"uri://www.example.org/red%09ros\\xE9#red\", IRI_OPTION)), \"uri://www.example.org/red%09ros%C3%A9#red\");\n\n\t//Internationalized Domain Name conversion via punycode example from RFC 3987\n\tstrictEqual(URI.serialize(URI.parse(\"uri://r\\xE9sum\\xE9.example.org\", {iri:true, domainHost:true}), {domainHost:true}), \"uri://xn--rsum-bpad.example.org\");\n});\n\ntest(\"Convert URI to IRI\", function () {\n\t//examples from RFC 3987\n\tstrictEqual(URI.serialize(URI.parse(\"uri://www.example.org/D%C3%BCrst\"), IRI_OPTION), \"uri://www.example.org/D\\xFCrst\");\n\tstrictEqual(URI.serialize(URI.parse(\"uri://www.example.org/D%FCrst\"), IRI_OPTION), \"uri://www.example.org/D%FCrst\");\n\tstrictEqual(URI.serialize(URI.parse(\"uri://xn--99zt52a.example.org/%e2%80%ae\"), IRI_OPTION), \"uri://xn--99zt52a.example.org/%E2%80%AE\");  //or uri://\\u7D0D\\u8C46.example.org/%E2%80%AE\n\n\t//Internationalized Domain Name conversion via punycode example from RFC 3987\n\tstrictEqual(URI.serialize(URI.parse(\"uri://xn--rsum-bpad.example.org\", {domainHost:true}), {iri:true, domainHost:true}), \"uri://r\\xE9sum\\xE9.example.org\");\n});\n\n//\n// HTTP\n//\n\nif (URI.SCHEMES[\"http\"]) {\n\n\t//module(\"HTTP\");\n\n\ttest(\"HTTP Equals\", function () {\n\t\t//test from RFC 2616\n\t\tstrictEqual(URI.equal(\"http://abc.com:80/~smith/home.html\", \"http://abc.com/~smith/home.html\"), true);\n\t\tstrictEqual(URI.equal(\"http://ABC.com/%7Esmith/home.html\", \"http://abc.com/~smith/home.html\"), true);\n\t\tstrictEqual(URI.equal(\"http://ABC.com:/%7esmith/home.html\", \"http://abc.com/~smith/home.html\"), true);\n\t\tstrictEqual(URI.equal(\"HTTP://ABC.COM\", \"http://abc.com/\"), true);\n\t\t//test from RFC 3986\n\t\tstrictEqual(URI.equal(\"http://example.com:/\", \"http://example.com:80/\"), true);\n\t});\n\n}\n\nif (URI.SCHEMES[\"https\"]) {\n\n\t//module(\"HTTPS\");\n\n\ttest(\"HTTPS Equals\", function () {\n\t\tstrictEqual(URI.equal(\"https://example.com\", \"https://example.com:443/\"), true);\n\t\tstrictEqual(URI.equal(\"https://example.com:/\", \"https://example.com:443/\"), true);\n\t});\n\n}\n\n//\n// URN\n//\n\nif (URI.SCHEMES[\"urn\"]) {\n\n\t//module(\"URN\");\n\n\ttest(\"URN Parsing\", function () {\n\t\t//example from RFC 2141\n\t\tvar components = URI.parse(\"urn:foo:a123,456\");\n\t\tstrictEqual(components.error, undefined, \"errors\");\n\t\tstrictEqual(components.scheme, \"urn\", \"scheme\");\n\t\t//strictEqual(components.authority, undefined, \"authority\");\n\t\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\t\tstrictEqual(components.host, undefined, \"host\");\n\t\tstrictEqual(components.port, undefined, \"port\");\n\t\tstrictEqual(components.path, undefined, \"path\");\n\t\tstrictEqual(components.query, undefined, \"query\");\n\t\tstrictEqual(components.fragment, undefined, \"fragment\");\n\t\tstrictEqual(components.nid, \"foo\", \"nid\");\n\t\tstrictEqual(components.nss, \"a123,456\", \"nss\");\n\t});\n\n\ttest(\"URN Serialization\", function () {\n\t\t//example from RFC 2141\n\t\tvar components = {\n\t\t\tscheme : \"urn\",\n\t\t\tnid : \"foo\",\n\t\t\tnss : \"a123,456\"\n\t\t};\n\t\tstrictEqual(URI.serialize(components), \"urn:foo:a123,456\");\n\t});\n\n\ttest(\"URN Equals\", function () {\n\t\t//test from RFC 2141\n\t\tstrictEqual(URI.equal(\"urn:foo:a123,456\", \"urn:foo:a123,456\"), true);\n\t\tstrictEqual(URI.equal(\"urn:foo:a123,456\", \"URN:foo:a123,456\"), true);\n\t\tstrictEqual(URI.equal(\"urn:foo:a123,456\", \"urn:FOO:a123,456\"), true);\n\t\tstrictEqual(URI.equal(\"urn:foo:a123,456\", \"urn:foo:A123,456\"), false);\n\t\tstrictEqual(URI.equal(\"urn:foo:a123%2C456\", \"URN:FOO:a123%2c456\"), true);\n\t});\n\n\ttest(\"URN Resolving\", function () {\n\t\t//example from epoberezkin\n\t\tstrictEqual(URI.resolve('', 'urn:some:ip:prop'), 'urn:some:ip:prop');\n\t\tstrictEqual(URI.resolve('#', 'urn:some:ip:prop'), 'urn:some:ip:prop');\n\t\tstrictEqual(URI.resolve('urn:some:ip:prop', 'urn:some:ip:prop'), 'urn:some:ip:prop');\n\t\tstrictEqual(URI.resolve('urn:some:other:prop', 'urn:some:ip:prop'), 'urn:some:ip:prop');\n\t});\n\n\t//\n\t// URN UUID\n\t//\n\n\ttest(\"UUID Parsing\", function () {\n\t\t//example from RFC 4122\n\t\tvar components = URI.parse(\"urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6\");\n\t\tstrictEqual(components.error, undefined, \"errors\");\n\t\tstrictEqual(components.scheme, \"urn\", \"scheme\");\n\t\t//strictEqual(components.authority, undefined, \"authority\");\n\t\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\t\tstrictEqual(components.host, undefined, \"host\");\n\t\tstrictEqual(components.port, undefined, \"port\");\n\t\tstrictEqual(components.path, undefined, \"path\");\n\t\tstrictEqual(components.query, undefined, \"query\");\n\t\tstrictEqual(components.fragment, undefined, \"fragment\");\n\t\tstrictEqual(components.nid, \"uuid\", \"nid\");\n\t\tstrictEqual(components.nss, undefined, \"nss\");\n\t\tstrictEqual(components.uuid, \"f81d4fae-7dec-11d0-a765-00a0c91e6bf6\", \"uuid\");\n\n\t\tcomponents = URI.parse(\"urn:uuid:notauuid-7dec-11d0-a765-00a0c91e6bf6\");\n\t\tnotStrictEqual(components.error, undefined, \"errors\");\n\t});\n\n\ttest(\"UUID Serialization\", function () {\n\t\t//example from RFC 4122\n\t\tvar components = {\n\t\t\tscheme : \"urn\",\n\t\t\tnid : \"uuid\",\n\t\t\tuuid : \"f81d4fae-7dec-11d0-a765-00a0c91e6bf6\"\n\t\t};\n\t\tstrictEqual(URI.serialize(components), \"urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6\");\n\n\t\tcomponents = {\n\t\t\tscheme : \"urn\",\n\t\t\tnid : \"uuid\",\n\t\t\tuuid : \"notauuid-7dec-11d0-a765-00a0c91e6bf6\"\n\t\t};\n\t\tstrictEqual(URI.serialize(components), \"urn:uuid:notauuid-7dec-11d0-a765-00a0c91e6bf6\");\n\t});\n\n\ttest(\"UUID Equals\", function () {\n\t\tstrictEqual(URI.equal(\"URN:UUID:F81D4FAE-7DEC-11D0-A765-00A0C91E6BF6\", \"urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6\"), true);\n\t});\n\n\ttest(\"URN NID Override\", function () {\n\t\tvar components = URI.parse(\"urn:foo:f81d4fae-7dec-11d0-a765-00a0c91e6bf6\", {nid:\"uuid\"});\n\t\tstrictEqual(components.error, undefined, \"errors\");\n\t\tstrictEqual(components.scheme, \"urn\", \"scheme\");\n\t\tstrictEqual(components.path, undefined, \"path\");\n\t\tstrictEqual(components.nid, \"foo\", \"nid\");\n\t\tstrictEqual(components.nss, undefined, \"nss\");\n\t\tstrictEqual(components.uuid, \"f81d4fae-7dec-11d0-a765-00a0c91e6bf6\", \"uuid\");\n\n\t\tvar components = {\n\t\t\tscheme : \"urn\",\n\t\t\tnid : \"foo\",\n\t\t\tuuid : \"f81d4fae-7dec-11d0-a765-00a0c91e6bf6\"\n\t\t};\n\t\tstrictEqual(URI.serialize(components, {nid:\"uuid\"}), \"urn:foo:f81d4fae-7dec-11d0-a765-00a0c91e6bf6\");\n\t});\n}\n\n//\n// Mailto\n//\n\nif (URI.SCHEMES[\"mailto\"]) {\n\n\t//module(\"Mailto\");\n\n\ttest(\"Mailto Parse\", function () {\n\t\tvar components;\n\n\t\t//tests from RFC 6068\n\n\t\tcomponents = URI.parse(\"mailto:chris@example.com\");\n\t\tstrictEqual(components.error, undefined, \"error\");\n\t\tstrictEqual(components.scheme, \"mailto\", \"scheme\");\n\t\tstrictEqual(components.userinfo, undefined, \"userinfo\");\n\t\tstrictEqual(components.host, undefined, \"host\");\n\t\tstrictEqual(components.port, undefined, \"port\");\n\t\tstrictEqual(components.path, undefined, \"path\");\n\t\tstrictEqual(components.query, undefined, \"query\");\n\t\tstrictEqual(components.fragment, undefined, \"fragment\");\n\t\tdeepEqual(components.to, [\"chris@example.com\"], \"to\");\n\t\tstrictEqual(components.subject, undefined, \"subject\");\n\t\tstrictEqual(components.body, undefined, \"body\");\n\t\tstrictEqual(components.headers, undefined, \"headers\");\n\n\t\tcomponents = URI.parse(\"mailto:infobot@example.com?subject=current-issue\");\n\t\tdeepEqual(components.to, [\"infobot@example.com\"], \"to\");\n\t\tstrictEqual(components.subject, \"current-issue\", \"subject\");\n\n\t\tcomponents = URI.parse(\"mailto:infobot@example.com?body=send%20current-issue\");\n\t\tdeepEqual(components.to, [\"infobot@example.com\"], \"to\");\n\t\tstrictEqual(components.body, \"send current-issue\", \"body\");\n\n\t\tcomponents = URI.parse(\"mailto:infobot@example.com?body=send%20current-issue%0D%0Asend%20index\");\n\t\tdeepEqual(components.to, [\"infobot@example.com\"], \"to\");\n\t\tstrictEqual(components.body, \"send current-issue\\x0D\\x0Asend index\", \"body\");\n\n\t\tcomponents = URI.parse(\"mailto:list@example.org?In-Reply-To=%3C3469A91.D10AF4C@example.com%3E\");\n\t\tdeepEqual(components.to, [\"list@example.org\"], \"to\");\n\t\tdeepEqual(components.headers, {\"In-Reply-To\":\"<3469A91.D10AF4C@example.com>\"}, \"headers\");\n\n\t\tcomponents = URI.parse(\"mailto:majordomo@example.com?body=subscribe%20bamboo-l\");\n\t\tdeepEqual(components.to, [\"majordomo@example.com\"], \"to\");\n\t\tstrictEqual(components.body, \"subscribe bamboo-l\", \"body\");\n\n\t\tcomponents = URI.parse(\"mailto:joe@example.com?cc=bob@example.com&body=hello\");\n\t\tdeepEqual(components.to, [\"joe@example.com\"], \"to\");\n\t\tstrictEqual(components.body, \"hello\", \"body\");\n\t\tdeepEqual(components.headers, {\"cc\":\"bob@example.com\"}, \"headers\");\n\n\t\tcomponents = URI.parse(\"mailto:joe@example.com?cc=bob@example.com?body=hello\");\n\t\tif (URI.VALIDATE_SUPPORT) ok(components.error, \"invalid header fields\");\n\n\t\tcomponents = URI.parse(\"mailto:gorby%25kremvax@example.com\");\n\t\tdeepEqual(components.to, [\"gorby%kremvax@example.com\"], \"to gorby%kremvax@example.com\");\n\n\t\tcomponents = URI.parse(\"mailto:unlikely%3Faddress@example.com?blat=foop\");\n\t\tdeepEqual(components.to, [\"unlikely?address@example.com\"], \"to unlikely?address@example.com\");\n\t\tdeepEqual(components.headers, {\"blat\":\"foop\"}, \"headers\");\n\n\t\tcomponents = URI.parse(\"mailto:Mike%26family@example.org\");\n\t\tdeepEqual(components.to, [\"Mike&family@example.org\"], \"to Mike&family@example.org\");\n\n\t\tcomponents = URI.parse(\"mailto:%22not%40me%22@example.org\");\n\t\tdeepEqual(components.to, ['\"not@me\"@example.org'], \"to \" + '\"not@me\"@example.org');\n\n\t\tcomponents = URI.parse(\"mailto:%22oh%5C%5Cno%22@example.org\");\n\t\tdeepEqual(components.to, ['\"oh\\\\\\\\no\"@example.org'], \"to \" + '\"oh\\\\\\\\no\"@example.org');\n\n\t\tcomponents = URI.parse(\"mailto:%22%5C%5C%5C%22it's%5C%20ugly%5C%5C%5C%22%22@example.org\");\n\t\tdeepEqual(components.to, ['\"\\\\\\\\\\\\\"it\\'s\\\\ ugly\\\\\\\\\\\\\"\"@example.org'], \"to \" + '\"\\\\\\\\\\\\\"it\\'s\\\\ ugly\\\\\\\\\\\\\"\"@example.org');\n\n\t\tcomponents = URI.parse(\"mailto:user@example.org?subject=caf%C3%A9\");\n\t\tdeepEqual(components.to, [\"user@example.org\"], \"to\");\n\t\tstrictEqual(components.subject, \"caf\\xE9\", \"subject\");\n\n\t\tcomponents = URI.parse(\"mailto:user@example.org?subject=%3D%3Futf-8%3FQ%3Fcaf%3DC3%3DA9%3F%3D\");\n\t\tdeepEqual(components.to, [\"user@example.org\"], \"to\");\n\t\tstrictEqual(components.subject, \"=?utf-8?Q?caf=C3=A9?=\", \"subject\");  //TODO: Verify this\n\n\t\tcomponents = URI.parse(\"mailto:user@example.org?subject=%3D%3Fiso-8859-1%3FQ%3Fcaf%3DE9%3F%3D\");\n\t\tdeepEqual(components.to, [\"user@example.org\"], \"to\");\n\t\tstrictEqual(components.subject, \"=?iso-8859-1?Q?caf=E9?=\", \"subject\");  //TODO: Verify this\n\n\t\tcomponents = URI.parse(\"mailto:user@example.org?subject=caf%C3%A9&body=caf%C3%A9\");\n\t\tdeepEqual(components.to, [\"user@example.org\"], \"to\");\n\t\tstrictEqual(components.subject, \"caf\\xE9\", \"subject\");\n\t\tstrictEqual(components.body, \"caf\\xE9\", \"body\");\n\n\t\tif (URI.IRI_SUPPORT) {\n\t\t\tcomponents = URI.parse(\"mailto:user@%E7%B4%8D%E8%B1%86.example.org?subject=Test&body=NATTO\");\n\t\t\tdeepEqual(components.to, [\"user@xn--99zt52a.example.org\"], \"to\");\n\t\t\tstrictEqual(components.subject, \"Test\", \"subject\");\n\t\t\tstrictEqual(components.body, \"NATTO\", \"body\");\n\t\t}\n\n\t});\n\n\ttest(\"Mailto Serialize\", function () {\n\t\tvar components;\n\n\t\t//tests from RFC 6068\n\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : [\"chris@example.com\"]}), \"mailto:chris@example.com\");\n\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : [\"infobot@example.com\"], body : \"current-issue\"}), \"mailto:infobot@example.com?body=current-issue\");\n\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : [\"infobot@example.com\"], body : \"send current-issue\"}), \"mailto:infobot@example.com?body=send%20current-issue\");\n\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : [\"infobot@example.com\"], body : \"send current-issue\\x0D\\x0Asend index\"}), \"mailto:infobot@example.com?body=send%20current-issue%0D%0Asend%20index\");\n\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : [\"list@example.org\"], headers : {\"In-Reply-To\" : \"<3469A91.D10AF4C@example.com>\"}}), \"mailto:list@example.org?In-Reply-To=%3C3469A91.D10AF4C@example.com%3E\");\n\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : [\"majordomo@example.com\"], body : \"subscribe bamboo-l\"}), \"mailto:majordomo@example.com?body=subscribe%20bamboo-l\");\n\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : [\"joe@example.com\"], headers : {\"cc\" : \"bob@example.com\", \"body\" : \"hello\"}}), \"mailto:joe@example.com?cc=bob@example.com&body=hello\");\n\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : [\"gorby%25kremvax@example.com\"]}), \"mailto:gorby%25kremvax@example.com\");\n\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : [\"unlikely%3Faddress@example.com\"], headers : {\"blat\" : \"foop\"}}), \"mailto:unlikely%3Faddress@example.com?blat=foop\");\n\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : [\"Mike&family@example.org\"]}), \"mailto:Mike%26family@example.org\");\n\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : ['\"not@me\"@example.org']}), \"mailto:%22not%40me%22@example.org\");\n\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : ['\"oh\\\\\\\\no\"@example.org']}), \"mailto:%22oh%5C%5Cno%22@example.org\");\n\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : ['\"\\\\\\\\\\\\\"it\\'s\\\\ ugly\\\\\\\\\\\\\"\"@example.org']}), \"mailto:%22%5C%5C%5C%22it's%5C%20ugly%5C%5C%5C%22%22@example.org\");\n\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : [\"user@example.org\"], subject : \"caf\\xE9\"}), \"mailto:user@example.org?subject=caf%C3%A9\");\n\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : [\"user@example.org\"], subject : \"=?utf-8?Q?caf=C3=A9?=\"}), \"mailto:user@example.org?subject=%3D%3Futf-8%3FQ%3Fcaf%3DC3%3DA9%3F%3D\");\n\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : [\"user@example.org\"], subject : \"=?iso-8859-1?Q?caf=E9?=\"}), \"mailto:user@example.org?subject=%3D%3Fiso-8859-1%3FQ%3Fcaf%3DE9%3F%3D\");\n\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : [\"user@example.org\"], subject : \"caf\\xE9\", body : \"caf\\xE9\"}), \"mailto:user@example.org?subject=caf%C3%A9&body=caf%C3%A9\");\n\t\tif (URI.IRI_SUPPORT) {\n\t\t\tstrictEqual(URI.serialize({scheme : \"mailto\", to : [\"us\\xE9r@\\u7d0d\\u8c46.example.org\"], subject : \"Test\", body : \"NATTO\"}), \"mailto:us%C3%A9r@xn--99zt52a.example.org?subject=Test&body=NATTO\");\n\t\t}\n\n\t});\n\n\ttest(\"Mailto Equals\", function () {\n\t\t//tests from RFC 6068\n\t\tstrictEqual(URI.equal(\"mailto:addr1@an.example,addr2@an.example\", \"mailto:?to=addr1@an.example,addr2@an.example\"), true);\n\t\tstrictEqual(URI.equal(\"mailto:?to=addr1@an.example,addr2@an.example\", \"mailto:addr1@an.example?to=addr2@an.example\"), true);\n\t});\n\n}\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}